SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO







/* hace la suma de mp por tipo y lo inserta a la tabla TempBomCosto */
CREATE PROCEDURE [dbo].[SP_CALCULABOMCOSTOMP] (@spi_codigo int)   as

SET NOCOUNT ON 



	/* se insertan el subensamble a la tabla BOMCOSTEMP, para despues actualizarle las columnas de costos*/
	begin tran
		INSERT INTO TempBomCosto (MA_CODIGO, MA_GRAV_MP, MA_GRAV_ADD, 
			MA_GRAV_EMP, MA_GRAV_GI, MA_GRAV_GI_MX, MA_GRAV_MO, MA_NG_MP, MA_NG_ADD, MA_NG_EMP, MA_NG_USA, MA_NG_MX)
		select BST_PERTENECE, 0,0,0,0,0,0,0,0,0,0,0
		from CalculandoCosto
		where BST_PERTENECE not in (select MA_CODIGO from TempBomCosto)
		group by BST_PERTENECE 
	commit tran


/* en la vista para sacar el costo en la unidad de medida que se se esta usando en el bom
1. costo unit. en um generico = maestro.ma_costo/maestro.eq_gen
2. costo unit. en um bom = costo unit. en um generico * Bom_struct.factconv
*/

	exec SP_CREAVCALCULABOMCOSTOMPUno 0

--MA_NG_ADD (BOM_ARANCEL 7)
exec sp_droptable 'VCALCULABOMCOSTOMPdp'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPdp
FROM         dbo.VCALCULABOMCOSTOMP0
WHERE    (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('D', 'G', 'P'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE


--MA_NG_USA (BOM_ARANCEL N)
exec sp_droptable 'VCALCULABOMCOSTOMPcd'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPcd
FROM         dbo.VCALCULABOMCOSTOMP0 
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('D', 'C'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE


--MA_NG_MP (BOM_ARANCEL 2)
exec sp_droptable 'VCALCULABOMCOSTOMPnc'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPnc
FROM         dbo.VCALCULABOMCOSTOMP0 
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('N', 'C', 'Z'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE

--MA_GRAV_MP (BOM_ARANCEL 1)
exec sp_droptable 'VCALCULABOMCOSTOMPa'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPa
FROM         dbo.VCALCULABOMCOSTOMP0
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('A'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE


--MA_NG_EMP (BOM_ARANCEL 3)
exec sp_droptable 'VCALCULABOMCOSTOMPf'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPf
FROM         dbo.VCALCULABOMCOSTOMP0 
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('F'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE


--MA_GRAV_ADD (BOM_ARANCEL 6)
exec sp_droptable 'VCALCULABOMCOSTOMPb'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPb
FROM         dbo.VCALCULABOMCOSTOMP0 
WHERE      (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('B'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE

--MA_GRAV_EMP  ( BOM_ARANCEL 8)
exec sp_droptable 'VCALCULABOMCOSTOMPe'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPe
FROM         dbo.VCALCULABOMCOSTOMP0 
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('E', 'H'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE

--MA_NG_MX (BOM_ARANCEL Z)
exec sp_droptable 'VCALCULABOMCOSTOMPmx'

SELECT     ROUND(SUM(dbo.VCALCULABOMCOSTOMP0.MA_COSTO), 6) as MA_COSTO, dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE
into dbo.VCALCULABOMCOSTOMPmx
FROM         dbo.VCALCULABOMCOSTOMP0
WHERE     (dbo.VCALCULABOMCOSTOMP0.BST_TIPOCOSTO IN ('Z', 'G', 'H'))
GROUP BY dbo.VCALCULABOMCOSTOMP0.BSU_SUBENSAMBLE

/*************************************************************/

	begin tran
	UPDATE TempBomCosto 
	SET MA_GRAV_MP = isnull((SELECT  ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPa
			           WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	        MA_NG_EMP = isnull((SELECT  ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPf
			           WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	         MA_GRAV_ADD = isnull((SELECT  ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPb
			           WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	         MA_GRAV_EMP = isnull((SELECT  ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPe
			           WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	          MA_NG_USA = isnull((SELECT     ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPcd
				WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	           MA_NG_MP =  isnull((SELECT ROUND(SUM(MA_COSTO),6) 	FROM         VCALCULABOMCOSTOMPnc
				WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	           MA_NG_ADD =  isnull((SELECT ROUND(SUM(MA_COSTO),6) 	FROM         VCALCULABOMCOSTOMPdp
				WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0),
	        MA_NG_MX = isnull((SELECT  ROUND(SUM(MA_COSTO),6) FROM VCALCULABOMCOSTOMPmx
			           WHERE BSU_SUBENSAMBLE = TempBomCosto.MA_CODIGO),0)
	FROM TempBomCosto INNER JOIN CalculandoCosto 
	          ON TempBomCosto.MA_CODIGO=CalculandoCosto.BST_PERTENECE
	WHERE TempBomCosto.MA_CODIGO IN (SELECT BSU_SUBENSAMBLE FROM VCALCULABOMCOSTOMP GROUP BY BSU_SUBENSAMBLE)

	commit tran

exec sp_droptable 'VCALCULABOMCOSTOMPdp'
exec sp_droptable 'VCALCULABOMCOSTOMPcd'
exec sp_droptable 'VCALCULABOMCOSTOMPnc'
exec sp_droptable 'VCALCULABOMCOSTOMPa'
exec sp_droptable 'VCALCULABOMCOSTOMPf'
exec sp_droptable 'VCALCULABOMCOSTOMPb'
exec sp_droptable 'VCALCULABOMCOSTOMPe'
exec sp_droptable 'VCALCULABOMCOSTOMPmx'


-- hace la suma de subensamble y lo inserta a la tabla TempBomCosto   
	begin tran
		INSERT INTO TempBomCosto (MA_CODIGO, MA_GRAV_MP, MA_GRAV_ADD, MA_GRAV_EMP, MA_GRAV_GI,
		MA_GRAV_GI_MX, MA_GRAV_MO, MA_NG_MP, MA_NG_ADD, MA_NG_EMP, MA_NG_USA, MA_NG_MX)

		SELECT     BOM_STRUCT.BSU_SUBENSAMBLE, round(isnull(SUM(VMAESTROCOST.MA_GRAV_MP * BOM_STRUCT.BST_INCORPOR),0),6), 
		                      round(isnull(SUM(VMAESTROCOST.MA_GRAV_ADD * BOM_STRUCT.BST_INCORPOR),0),6) , 
		                      round(isnull(SUM(VMAESTROCOST.MA_GRAV_EMP * BOM_STRUCT.BST_INCORPOR),0),6) , 
		                      round(isnull(SUM(VMAESTROCOST.MA_GRAV_GI * BOM_STRUCT.BST_INCORPOR),0),6) , 
		                      round(isnull(SUM(VMAESTROCOST.MA_GRAV_GI_MX * BOM_STRUCT.BST_INCORPOR),0),6) , 
		                      round(isnull(SUM(VMAESTROCOST.MA_GRAV_MO * BOM_STRUCT.BST_INCORPOR),0),6) , 
		                      round(isnull(SUM(VMAESTROCOST.MA_NG_MP * BOM_STRUCT.BST_INCORPOR),0),6), 
		                      round(isnull(SUM(VMAESTROCOST.MA_NG_ADD * BOM_STRUCT.BST_INCORPOR),0),6), 
		                      round(isnull(SUM(VMAESTROCOST.MA_NG_EMP * BOM_STRUCT.BST_INCORPOR),0),6), 
		                      round(isnull(SUM(VMAESTROCOST.MA_NG_USA * BOM_STRUCT.BST_INCORPOR),0),6),
		                      round(isnull(SUM(VMAESTROCOST.MA_NG_MX * BOM_STRUCT.BST_INCORPOR),0),6)
		FROM         BOM_STRUCT LEFT OUTER JOIN
		                      VMAESTROCOST ON BOM_STRUCT.BST_HIJO = VMAESTROCOST.MA_CODIGO INNER JOIN
					MAESTRO ON BOM_STRUCT.BST_HIJO = MAESTRO.MA_CODIGO INNER JOIN
		                      CONFIGURATIPO ON MAESTRO.TI_CODIGO = CONFIGURATIPO.TI_CODIGO INNER JOIN CalculandoCosto
				ON BOM_STRUCT.BSU_SUBENSAMBLE=CalculandoCosto.BST_PERTENECE 
		WHERE     (BOM_STRUCT.BST_PERINI <= CalculandoCosto.BST_PERINI) AND (BOM_STRUCT.BST_PERFIN >= CalculandoCosto.BST_PERINI)
			   AND VMAESTROCOST.SPI_CODIGO=@spi_codigo
		--Yolanda Avila
		--2010-10-04
		--Se agrego esta linea para que no incluya en el calculo del costo los componentes que tienen tipo de Adquisicion "FANTASMA"
		and BOM_STRUCT.bst_tip_ens <>'P'

		GROUP BY CONFIGURATIPO.CFT_TIPO, BOM_STRUCT.BSU_SUBENSAMBLE, BOM_STRUCT.BST_TIP_ENS, 
		                      VMAESTROCOST.TCO_CODIGO,CalculandoCosto.BST_PERINI
		HAVING      (CONFIGURATIPO.CFT_TIPO = 'S' OR
		                      CONFIGURATIPO.CFT_TIPO = 'P') AND BOM_STRUCT.BST_TIP_ENS<>'C'
	commit tran





GO
