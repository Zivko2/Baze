SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [SP_ACTUALIZATIPOMATORIGRango] (@NFT_FECHA varchar(11), @spi_codigo int)   as

DECLARE @spi_codigo2 int



	IF (SELECT SPI_CODIGO FROM SPI WHERE SPI_CLAVE='MX' )= @spi_codigo
	SELECT @spi_codigo2= SPI_CODIGO FROM SPI WHERE SPI_CLAVE='NAFTA'
	ELSE
	SET @spi_codigo2=@spi_codigo



	exec SP_CreaVMAESTROCOST1tlc @NFT_FECHA


	

		-- empaque
		UPDATE CLASIFICATLC
		SET BST_EMPAQUE = isnull(round(CLASIFICATLC.BST_INCORPOR * VMAESTROCOSTtlc.MA_COSTO/isnull(VMAESTROCOSTtlc.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6),0), 
		BST_TIPOORIG = 'E' 
		FROM    CLASIFICATLC INNER JOIN
		        VMAESTROCOSTtlc ON CLASIFICATLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO 
		WHERE (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)) AND BST_TIPOCOSTO in ('E', 'F') 


		-- materia prima originaria
		UPDATE CLASIFICATLC
		SET BST_MATORIG = isnull(round(CLASIFICATLC.BST_INCORPOR * VMAESTROCOSTtlc.MA_COSTO/isnull(VMAESTROCOSTtlc.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6),0),
		BST_TIPOORIG = 'O' 
		FROM    CLASIFICATLC INNER JOIN
		        VMAESTROCOSTtlc ON CLASIFICATLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO 
		WHERE (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)) AND BST_TIPOCOSTO in ('C', 'D', 'N', 'P')

	
		-- materia prima no originaria
		UPDATE CLASIFICATLC
		SET BST_MATNOORIG = isnull(round(CLASIFICATLC.BST_INCORPOR * VMAESTROCOSTtlc.MA_COSTO/isnull(VMAESTROCOSTtlc.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6),0),
		BST_TIPOORIG = 'N' 
		FROM    CLASIFICATLC INNER JOIN
		        VMAESTROCOSTtlc ON CLASIFICATLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO 
		WHERE (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)) AND BST_TIPOCOSTO in ('A', 'B')
		

		UPDATE CLASIFICATLC
		SET BST_MATORIG = 
			isnull((SELECT isnull(round(CTLC.BST_INCORPOR * VMAESTROCOSTtlc.MA_COSTO/isnull(MAESTRO.EQ_GEN,1)*isnull(CTLC.FACTCONV,1),6),0)
			FROM    CLASIFICATLC CTLC LEFT OUTER JOIN
			              VMAESTROCOSTtlc ON CTLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO LEFT OUTER JOIN
			              MAESTRO ON CTLC.BST_HIJO = MAESTRO.MA_CODIGO 
			WHERE     VMAESTROCOSTtlc.SPI_CODIGO=@spi_codigo2 AND CTLC.CLT_CODIGO= CLASIFICATLC.CLT_CODIGO),0),

		          BST_TIPOORIG = 'O', 

		          BST_COS_UNI = 
			isnull((SELECT round(VMAESTROCOSTtlc.MA_COSTO/isnull(MAESTRO.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6)
			FROM    CLASIFICATLC CTLC LEFT OUTER JOIN
			              VMAESTROCOSTtlc ON CTLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO LEFT OUTER JOIN
			              MAESTRO ON CTLC.BST_HIJO = MAESTRO.MA_CODIGO 
			WHERE     VMAESTROCOSTtlc.SPI_CODIGO=@spi_codigo2 AND CTLC.CLT_CODIGO= CLASIFICATLC.CLT_CODIGO),0)		FROM CLASIFICATLC
		WHERE  (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null))  AND BST_TIPOCOSTO='S' and BST_TRANS='S'



		-- si para los subensambles no existe el costo segun el tratado toma el declarado en nafta.
		UPDATE CLASIFICATLC
		SET BST_MATORIG = 
			isnull((SELECT isnull(round(CTLC.BST_INCORPOR * VMAESTROCOSTtlc.MA_COSTO/isnull(MAESTRO.EQ_GEN,1)*isnull(CTLC.FACTCONV,1),6),0)
			FROM    CLASIFICATLC CTLC LEFT OUTER JOIN
			              VMAESTROCOSTtlc ON CTLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO LEFT OUTER JOIN
			              MAESTRO ON CTLC.BST_HIJO = MAESTRO.MA_CODIGO 
			WHERE     VMAESTROCOSTtlc.SPI_CODIGO=@spi_codigo2 AND CTLC.CLT_CODIGO= CLASIFICATLC.CLT_CODIGO),0),

		          BST_TIPOORIG = 'O', 

		          BST_COS_UNI = 
			isnull((SELECT round(VMAESTROCOSTtlc.MA_COSTO/isnull(MAESTRO.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6)
			FROM    CLASIFICATLC CTLC LEFT OUTER JOIN
			              VMAESTROCOSTtlc ON CTLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO LEFT OUTER JOIN
			              MAESTRO ON CTLC.BST_HIJO = MAESTRO.MA_CODIGO 
			WHERE     VMAESTROCOSTtlc.SPI_CODIGO=@spi_codigo2 AND CTLC.CLT_CODIGO= CLASIFICATLC.CLT_CODIGO),0)
		FROM CLASIFICATLC
		WHERE  (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null))  AND BST_TIPOCOSTO='S' and BST_TRANS='S' and isnull(BST_COS_UNI,0)=0 




	UPDATE CLASIFICATLC
	SET BST_COS_UNI = isnull(round(VMAESTROCOSTtlc.MA_COSTO/isnull(VMAESTROCOSTtlc.EQ_GEN,1)*isnull(CLASIFICATLC.FACTCONV,1),6),0)
	FROM    CLASIFICATLC INNER JOIN
	        VMAESTROCOSTtlc ON CLASIFICATLC.BST_HIJO = VMAESTROCOSTtlc.MA_CODIGO 
	WHERE (CLASIFICATLC.NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)) 
	AND BST_TIPOCOSTO not in ('S')

	

	UPDATE CLASIFICATLC
	SET BST_EMPAQUE = 0
	WHERE BST_EMPAQUE IS NULL
	AND NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)


	UPDATE CLASIFICATLC
	SET BST_MATORIG = 0 
	WHERE BST_MATORIG IS NULL
	AND NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)


	UPDATE CLASIFICATLC
	SET BST_MATNOORIG = 0
	WHERE BST_MATNOORIG IS NULL
	AND NFT_CODIGO in (select nft_codigo from ##macodigo where nft_codigo is not null)

GO
