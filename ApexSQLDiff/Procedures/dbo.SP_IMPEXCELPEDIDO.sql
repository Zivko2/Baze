SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_IMPEXCELPEDIDO] @Codigo int, @cl_codigo int   as

SET NOCOUNT ON 
DECLARE @CONSECUTIVO INTEGER, @NOPARTE varchar(30), @COSTO decimal(38,6), @CANTIDAD decimal(38,6), @PESO decimal(38,6), @ORIGEN INT,
@Pdd_indiced int
-- se actualiza el costo en caso de que venga nulo o igual a cero
UPDATE dbo.IMPEXCELPROD
SET     dbo.IMPEXCELPROD.COSTO= ISNULL(dbo.VMAESTROCOST.MA_COSTO, 0)
FROM         dbo.IMPEXCELPROD INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE dbo.IMPEXCELPROD.COSTO=0 OR dbo.IMPEXCELPROD.COSTO IS NULL
-- se actualiza el precio en caso de que venga nulo o igual a cero
IF (SELECT CF_PRECIOCLIENTE FROM CONFIGURACION)='N' 
BEGIN
	UPDATE dbo.IMPEXCELPROD
	SET     dbo.IMPEXCELPROD.PRECIO= ISNULL(dbo.MAESTROCLIENTE.MC_PRECIO, 0)
	FROM         dbo.IMPEXCELPROD INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
	                      dbo.MAESTROCLIENTE ON dbo.MAESTRO.MA_CODIGO = dbo.MAESTROCLIENTE.MA_CODIGO
	WHERE (dbo.IMPEXCELPROD.PRECIO=0 OR dbo.IMPEXCELPROD.PRECIO IS NULL)
END
ELSE
BEGIN
	UPDATE dbo.IMPEXCELPROD
	SET     dbo.IMPEXCELPROD.PRECIO= ISNULL(dbo.MAESTROCLIENTE.MC_PRECIO, 0)
	FROM         dbo.IMPEXCELPROD INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
	                      dbo.MAESTROCLIENTE ON dbo.MAESTRO.MA_CODIGO = dbo.MAESTROCLIENTE.MA_CODIGO
	WHERE (dbo.IMPEXCELPROD.PRECIO=0 OR dbo.IMPEXCELPROD.PRECIO IS NULL)
	AND dbo.MAESTROCLIENTE.CL_CODIGO = @cl_codigo
END
--borra los registros de la tabla que se hayan importado sin numero de parte
delete from IMPEXCELPROD where NOPARTE=''
DELETE FROM IMPORTLOG WHERE IML_CBFORMA=108
if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS
-- revisa si existen en el catalogo maestro
if exists(SELECT dbo.IMPEXCELPROD.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELPROD.NOPARTE +' POR QUE NO EXISTE EN EL CAT. MAESTRO', 108
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL) 
-- revisa si es producto terminado o subensamble
if exists(SELECT dbo.IMPEXCELPROD.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     dbo.MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S'))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELPROD.NOPARTE +' POR QUE ES DIFERENTE DE PRODUCTO TERMINADO Y SUBENSAMBLE', 108
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     dbo.MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S')

-- insercion a la tabla pedidodet
	select @consecutivo=cv_codigo from consecutivo
	where cv_tipo = 'PDD'
INSERT INTO PEDIDODET     (PD_CODIGO, PDD_INDICED, MA_CODIGO, PDD_NOPARTE, PDD_NOMBRE, PDD_NAME, PDD_CANT, ME_CODIGO, PDD_SALDO, PDD_PRECIOVENTA, 
                      PDD_COS_UNI, TI_CODIGO)
SELECT     @Codigo, IMPEXCELPROD.ORDEN+@consecutivo, MAESTRO.MA_CODIGO, IMPEXCELPROD.NOPARTE, MAESTRO.MA_NOMBRE, MAESTRO.MA_NAME, IMPEXCELPROD.CANTIDAD, 
                      MAESTRO.ME_COM, IMPEXCELPROD.CANTIDAD, IMPEXCELPROD.PRECIO,
			 IMPEXCELPROD.COSTO, MAESTRO.TI_CODIGO
FROM         IMPEXCELPROD LEFT OUTER JOIN
                      MAESTRO ON IMPEXCELPROD.NOPARTE = MAESTRO.MA_NOPARTE
WHERE     (MAESTRO.MA_INV_GEN = 'I') AND MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO='P' OR CFT_TIPO='S')
ORDER BY IMPEXCELPROD.ORDEN

select @Pdd_indiced= max(pdd_indiced) from pedidodet
	update consecutivo
	set cv_codigo =  isnull(@pdd_indiced,0) + 1
	where cv_tipo = 'PDD'

GO
