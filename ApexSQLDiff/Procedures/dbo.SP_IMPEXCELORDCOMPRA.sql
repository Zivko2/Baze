SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO




























CREATE PROCEDURE [dbo].[SP_IMPEXCELORDCOMPRA] @Codigo int, @tr_codigo int   as

SET NOCOUNT ON 
DECLARE @ORD_indiced INT, @consecutivo INT
--borra los registros de la tabla que se hayan importado sin numero de parte
delete from IMPEXCELALM where NOPARTE=''

-- se actualiza el costo en caso de que venga nulo o igual a cero de productos o subensambles
UPDATE dbo.IMPEXCELALM
SET     dbo.IMPEXCELALM.COSTO= isnull(dbo.VMAESTROCOST.MA_GRAV_MP,0)+ isnull(dbo.VMAESTROCOST.MA_GRAV_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_GRAV_EMP,0)+ isnull(dbo.VMAESTROCOST.MA_NG_MP,0) +isnull(dbo.VMAESTROCOST.MA_NG_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_NG_EMP,0) + isnull(dbo.VMAESTROCOST.MA_GRAV_GI,0) + isnull(dbo.VMAESTROCOST.MA_GRAV_GI_MX,0) +
 isnull(dbo.VMAESTROCOST.MA_GRAV_MO,0)
FROM         dbo.IMPEXCELALM INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE (dbo.IMPEXCELALM.COSTO=0 OR dbo.IMPEXCELALM.COSTO IS NULL) AND dbo.MAESTRO.TI_CODIGO IN
(SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO='P' OR CFT_TIPO='S')
AND dbo.VMAESTROCOST.SPI_CODIGO=22 

-- se actualiza el costo en caso de que venga nulo o igual a cero de materiales
UPDATE dbo.IMPEXCELALM
SET     dbo.IMPEXCELALM.COSTO= isnull(dbo.VMAESTROCOST.MA_COSTO,0)
FROM         dbo.IMPEXCELALM INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE (dbo.IMPEXCELALM.COSTO=0 OR dbo.IMPEXCELALM.COSTO IS NULL) AND dbo.MAESTRO.TI_CODIGO IN
(SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S')
AND dbo.VMAESTROCOST.SPI_CODIGO=22 


DELETE FROM IMPORTLOG WHERE IML_CBFORMA=117

if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS

-- revisa si existen en el catalogo maestro
if exists(SELECT dbo.IMPEXCELALM.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELALM ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELALM.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL))

	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELALM.NOPARTE +' POR QUE NO EXISTE EN EL CAT. MAESTRO', 117
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELALM ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELALM.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL) 


if exists(SELECT     dbo.MAESTRO.MA_NOPARTE FROM         dbo.IMPEXCELALM INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE
	WHERE      dbo.MAESTRO.TI_CODIGO NOT IN (SELECT     TI_CODIGO
	                            FROM          RELTCOMPRATIPO  WHERE TR_CODIGO = @tr_codigo))

	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.MAESTRO.MA_NOPARTE +' POR QUE EL TIPO DE MATERIAL NO EXISTE EN EL TIPO DE COMPRA', 117
	FROM         dbo.IMPEXCELALM INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE
	WHERE     dbo.MAESTRO.TI_CODIGO NOT IN (SELECT TI_CODIGO FROM RELTCOMPRATIPO
                            WHERE      TR_CODIGO = @tr_codigo)



	select @consecutivo=cv_codigo from consecutivo
	where cv_tipo = 'ORD'

-- insercion a la tabla ORDCOMPRADET
INSERT INTO ORDCOMPRADET (OR_CODIGO, ORD_INDICED, ORD_NOPARTE, ORD_NOMBRE, ORD_NAME, ORD_CANT_ST, ORD_COS_UNI, ORD_COS_TOT, ORD_SALDO, 
                      MA_CODIGO, ME_CODIGO, TI_CODIGO, TCO_CODIGO)

SELECT     @Codigo, IMPEXCELALM.ORDEN+@consecutivo, IMPEXCELALM.NOPARTE, MAESTRO_1.MA_NOMBRE, MAESTRO_1.MA_NAME, IMPEXCELALM.CANTIDAD, 
                      IMPEXCELALM.COSTO, isnull(IMPEXCELALM.COSTO,0) *isnull(IMPEXCELALM.CANTIDAD,0), IMPEXCELALM.CANTIDAD, MAESTRO_1.MA_CODIGO, 
	        MAESTRO_1.ME_COM, MAESTRO_1.TI_CODIGO, VMAESTROCOST.TCO_CODIGO
FROM         dbo.MAESTRO MAESTRO_1 INNER JOIN
                      dbo.IMPEXCELALM ON MAESTRO_1.MA_NOPARTE = dbo.IMPEXCELALM.NOPARTE INNER JOIN
                      dbo.RELTCOMPRATIPO ON MAESTRO_1.TI_CODIGO = dbo.RELTCOMPRATIPO.TI_CODIGO LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON MAESTRO_1.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE     (MAESTRO_1.MA_INV_GEN = 'I') AND (dbo.RELTCOMPRATIPO.TR_CODIGO = @tr_codigo)
ORDER BY dbo.IMPEXCELALM.ORDEN


select @ORD_indiced= max(ORD_indiced) from ORDCOMPRADET

	update consecutivo
	set cv_codigo =  isnull(@ORD_indiced,0) + 1
	where cv_tipo = 'ORD'



























GO
