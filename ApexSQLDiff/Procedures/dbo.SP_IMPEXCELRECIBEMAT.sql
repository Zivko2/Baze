SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[SP_IMPEXCELRECIBEMAT] @Codigo int   as

SET NOCOUNT ON 
DECLARE @RCD_indiced INT, @consecutivo INT
-- se actualiza el costo en caso de que venga nulo o igual a cero de productos o subensambles
UPDATE dbo.IMPEXCELALM
SET     dbo.IMPEXCELALM.COSTO= isnull(dbo.VMAESTROCOST.MA_GRAV_MP,0)+ isnull(dbo.VMAESTROCOST.MA_GRAV_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_GRAV_EMP,0)+ isnull(dbo.VMAESTROCOST.MA_NG_MP,0) +isnull(dbo.VMAESTROCOST.MA_NG_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_NG_EMP,0) + isnull(dbo.VMAESTROCOST.MA_GRAV_GI,0) + isnull(dbo.VMAESTROCOST.MA_GRAV_GI_MX,0) +
 isnull(dbo.VMAESTROCOST.MA_GRAV_MO,0)
FROM         dbo.IMPEXCELALM INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE (dbo.IMPEXCELALM.COSTO=0 OR dbo.IMPEXCELALM.COSTO IS NULL) AND dbo.MAESTRO.TI_CODIGO IN
(SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO='P' OR CFT_TIPO='S')
-- se actualiza el costo en caso de que venga nulo o igual a cero de materiales
UPDATE dbo.IMPEXCELALM
SET     dbo.IMPEXCELALM.COSTO= isnull(dbo.VMAESTROCOST.MA_COSTO,0)
FROM         dbo.IMPEXCELALM INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELALM.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE (dbo.IMPEXCELALM.COSTO=0 OR dbo.IMPEXCELALM.COSTO IS NULL) AND dbo.MAESTRO.TI_CODIGO IN
(SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S')

--borra los registros de la tabla que se hayan importado sin numero de parte
delete from IMPEXCELALM where NOPARTE=''
DELETE FROM IMPORTLOG WHERE IML_CBFORMA=119
if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS
-- revisa si existen en el catalogo maestro
if exists(SELECT dbo.IMPEXCELALM.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELALM ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELALM.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELALM.NOPARTE +' POR QUE NO EXISTE EN EL CAT. MAESTRO', 119
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELALM ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELALM.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL) 
	select @consecutivo=cv_codigo from consecutivo
	where cv_tipo = 'RCD'
-- insercion a la tabla RECIBEMATDET
INSERT INTO RECIBEMATDET (RC_CODIGO, RCD_INDICED, MA_CODIGO, RCD_NOPARTE, RCD_NOMBRE, RCD_NAME, RCD_CANT, ME_CODIGO, RCD_COS_UNI, 
                      ME_ALM, EQ_ALM, RCD_CAN_ALM, RCD_COS_TOT)
SELECT     @Codigo, IMPEXCELALM.ORDEN+@consecutivo, MAESTRO.MA_CODIGO, IMPEXCELALM.NOPARTE, MAESTRO.MA_NOMBRE, MAESTRO.MA_NAME, IMPEXCELALM.CANTIDAD, 
                      MAESTRO.ME_COM, IMPEXCELALM.COSTO, MAESTRO.EQ_ALM, MAESTRO.ME_ALM AS ME_GEN,
		 isnull(IMPEXCELALM.CANTIDAD,0) * isnull(MAESTRO.EQ_ALM,1),  isnull(IMPEXCELALM.CANTIDAD,0) * isnull(IMPEXCELALM.COSTO,1)
FROM         MAESTRO MAESTRO_1 RIGHT OUTER JOIN
                      MAESTRO ON MAESTRO_1.MA_CODIGO = MAESTRO.MA_GENERICO RIGHT OUTER JOIN
                      IMPEXCELALM ON MAESTRO.MA_NOPARTE = IMPEXCELALM.NOPARTE
WHERE     (MAESTRO.MA_INV_GEN = 'I')
ORDER BY IMPEXCELALM.ORDEN

select @RCD_indiced= max(RCD_indiced) from RECIBEMATDET
	update consecutivo
	set cv_codigo =  isnull(@RCD_indiced,0) + 1
	where cv_tipo = 'RCD'

GO
