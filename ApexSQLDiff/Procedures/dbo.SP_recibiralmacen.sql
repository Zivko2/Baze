SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_recibiralmacen] (@rc_codigo int)   as

SET NOCOUNT ON 
declare @MA_CODIGO int, @RCD_NOPARTE varchar(30), @RCD_NOMBRE varchar(150), @RCD_NAME varchar(150), @RCD_CANT decimal(38,6), 
@RCD_COS_UNI decimal(38,6), @RCD_COS_TOT decimal(38,6), @RCD_CAN_ALM decimal(38,6), @ME_CODIGO int, 
@ME_ALM int, @RCD_OBSERVA varchar(1100), @EQ_ALM decimal(28,14), @CL_CODIGO int, 
@RCD_NOORDEN varchar(20), @RCD_ORD_COMP varchar(50), @RCD_FECHARECSAL datetime, @RC_FOLIO varchar(25),
@FECHA datetime, @CONSECUTIVO2 int, @CONSECUTIVO int, @PR_CODIGO int, @DI_PROVEE int, @CL_DESTINO int, @DI_DESTINO int,
@ALMD_CODIGO int, @ALM_CODIGO int, @FID_INDICED int, @FI_FOLIO varchar(25),  @END_ORD_COMP varchar(50), @OR_CODIGO int, @ORD_INDICED int,
@RCD_LOTE varchar(30), @ti_codigo int, @RCD_CANTEMP decimal(38,6), @MA_EMPAQUE int, @ALM_ORIGEN INT, @ALM_CORTO VARCHAR(30), @ALM_RECEPCION INT
/*
declare @en_codigo int, @end_indiced int
set @FECHA = convert(datetime, convert(varchar(11), getdate(),101))
select @RC_FOLIO=RC_FOLIO, @PR_CODIGO=PR_CODIGO,@DI_PROVEE=DI_PROVEE, 
@CL_DESTINO=CL_DESTINO, @DI_DESTINO=DI_DESTINO from RECIBEMAT where RC_CODIGO=@RC_CODIGO
select @ALM_CODIGO=alm_destino, @ALM_ORIGEN=alm_origen from tmovimiento where tm_codigo=12
	declare cur_entsal cursor for
		SELECT     ALMACEN.ALM_CORTO, FAMILIAALM.ALM_RECEPCION
		FROM         RECIBEMATDET INNER JOIN
		                      FAMILIAALMDET ON RECIBEMATDET.MA_CODIGO = FAMILIAALMDET.MA_CODIGO INNER JOIN
		                      FAMILIAALM ON FAMILIAALMDET.FALM_CORTO = FAMILIAALM.FALM_CORTO INNER JOIN
		                      ALMACEN ON FAMILIAALM.ALM_RECEPCION = ALMACEN.ALM_CODIGO
		WHERE (RECIBEMATDET.RC_CODIGO = @rc_codigo)
		GROUP BY ALMACEN.ALM_CORTO, FAMILIAALM.ALM_RECEPCION
		UNION
		SELECT '', 0
	open cur_entsal
	FETCH NEXT FROM cur_entsal INTO @ALM_CORTO, @ALM_RECEPCION
	WHILE (@@FETCH_STATUS = 0) 
	BEGIN
		IF @ALM_RECEPCION IS NOT NULL and @ALM_RECEPCION<>0
		set @ALM_CODIGO=@ALM_RECEPCION

		if not exists (SELECT * FROM ENTSALALM WHERE EN_FOLIO='REC'+@RC_FOLIO+'_'+@ALM_CORTO and TM_CODIGO=12)
		begin
	
			EXEC SP_GETCONSECUTIVO @TIPO='EN',@VALUE=@CONSECUTIVO OUTPUT
	
	
			INSERT INTO ENTSALALM(EN_CODIGO, EN_FOLIO, EN_FECHA, TM_CODIGO, PR_CODIGO,
			DI_PROVEE, CL_DESTINO, DI_DESTINO,  RC_CODIGO, EN_ESTATUS, EN_TIPO, ALM_DESTINO, ALM_ORIGEN, ALM_SALDOAFECTADO)
			VALUES(@CONSECUTIVO, 'REC'+@RC_FOLIO+'_'+@ALM_CORTO, @FECHA, 12, @PR_CODIGO,
			@DI_PROVEE, @CL_DESTINO, @DI_DESTINO, @rc_codigo, 'S', 'E', @ALM_CODIGO, @ALM_ORIGEN, 'N')
	
		end
		else
		begin
			select @CONSECUTIVO=EN_CODIGO FROM ENTSALALM WHERE EN_FOLIO='REC'+@RC_FOLIO+'_'+@ALM_CORTO and TM_CODIGO=12
		end
	
			declare cur_entsalrecepcion cursor for
				SELECT     dbo.RECIBEMATDET.RC_CODIGO, dbo.RECIBEMATDET.MA_CODIGO, dbo.RECIBEMATDET.RCD_NOPARTE, dbo.RECIBEMATDET.RCD_NOMBRE, 
				                      dbo.RECIBEMATDET.RCD_NAME, dbo.RECIBEMATDET.RCD_CANTINSP, dbo.RECIBEMATDET.RCD_COS_UNI, dbo.RECIBEMATDET.RCD_COS_TOT, 
				                      dbo.RECIBEMATDET.RCD_CAN_ALM, dbo.RECIBEMATDET.ME_CODIGO, dbo.RECIBEMATDET.ME_ALM, dbo.RECIBEMATDET.RCD_OBSERVA, 
				                      dbo.RECIBEMATDET.EQ_ALM, dbo.RECIBEMATDET.CL_CODIGO, dbo.RECIBEMATDET.RCD_NOORDEN, dbo.RECIBEMATDET.RCD_ORD_COMP, 
				                      dbo.RECIBEMATDET.RCD_FECHARECSAL, ISNULL(dbo.RECIBEMATDET.ALMD_CODIGO, 0) , ISNULL(dbo.RECIBEMATDET.FID_INDICED, - 1) 
				                      , dbo.RECIBEMATDET.FI_FOLIO, dbo.RECIBEMATDET.RCD_ORD_COMP, dbo.RECIBEMATDET.OR_CODIGO, 
				                      dbo.RECIBEMATDET.ORD_INDICED, dbo.RECIBEMATDET.RCD_LOTE, dbo.RECIBEMATDET.RCD_CANTEMP, dbo.RECIBEMATDET.MA_EMPAQUE
				FROM         dbo.RECIBEMATDET LEFT OUTER JOIN
				                      dbo.FAMILIAALMDET ON dbo.RECIBEMATDET.MA_CODIGO = dbo.FAMILIAALMDET.MA_CODIGO LEFT OUTER JOIN
				                      dbo.FAMILIAALM LEFT OUTER JOIN
				                      dbo.ALMACEN ON dbo.FAMILIAALM.ALM_RECEPCION = dbo.ALMACEN.ALM_CODIGO ON 
				                      dbo.FAMILIAALMDET.FALM_CORTO = dbo.FAMILIAALM.FALM_CORTO
				WHERE     (ISNULL(ALMACEN.ALM_CORTO,'') = isnull(@ALM_CORTO,'')) AND (RC_CODIGO = @rc_codigo) AND RCD_CANTINSP>0
			open cur_entsalrecepcion
			FETCH NEXT FROM cur_entsalrecepcion INTO @RC_CODIGO, @MA_CODIGO, @RCD_NOPARTE, @RCD_NOMBRE, @RCD_NAME, @RCD_CANT, 	
				@RCD_COS_UNI, @RCD_COS_TOT, @RCD_CAN_ALM, @ME_CODIGO, @ME_ALM, @RCD_OBSERVA, 
				@EQ_ALM, @CL_CODIGO, @RCD_NOORDEN, @RCD_ORD_COMP, @RCD_FECHARECSAL, @ALMD_CODIGO, @FID_INDICED,
				@FI_FOLIO,  @END_ORD_COMP, @OR_CODIGO, @ORD_INDICED, @RCD_LOTE, @RCD_CANTEMP, @MA_EMPAQUE
		
			WHILE (@@FETCH_STATUS = 0) 
			BEGIN
		
		
				SELECT @CONSECUTIVO2=ISNULL(MAX(END_INDICED),0) FROM ENTSALALMDET
				SET @CONSECUTIVO2=@CONSECUTIVO2+1
		
		
				select @ti_codigo=ti_codigo from maestro where ma_codigo=@MA_CODIGO
				IF EXISTS(SELECT   MA_EMPAQUE
					FROM         FAMILIAALMDET
					WHERE     (MA_CODIGO =@MA_CODIGO) AND MA_EMPAQUE IS NOT NULL AND MA_EMPAQUE<>0)
				SELECT   @RCD_CANTEMP= ROUND(@RCD_CAN_ALM/ ISNULL(MA_CANTXEMP, 0),0) , @MA_EMPAQUE=MA_EMPAQUE
				FROM         FAMILIAALMDET
				WHERE     (MA_CODIGO =@MA_CODIGO)

		
				INSERT INTO ENTSALALMDET (END_INDICED, EN_CODIGO, MA_CODIGO, END_NOPARTE, END_NOMBRE, END_NAME, END_CANT, END_COS_UNI, 
				END_COS_TOT, END_CAN_ALM, ME_CODIGO, ME_ALM, END_OBSERVA, EQ_ALM, CL_CODIGO, 
				END_NOORDEN, END_ORD_COMP, END_FECHARECSAL, FID_INDICED, FI_FOLIO, OR_CODIGO, ORD_INDICED,
				END_LOTE, ti_codigo, END_CANTEMP, MA_EMPAQUE)
		
				values ( @CONSECUTIVO2, @CONSECUTIVO, @MA_CODIGO, @RCD_NOPARTE, @RCD_NOMBRE, @RCD_NAME, @RCD_CANT, 
				@RCD_COS_UNI, @RCD_COS_TOT, @RCD_CAN_ALM, @ME_CODIGO, @ME_ALM, @RCD_OBSERVA, 
				@EQ_ALM, @CL_CODIGO, @RCD_NOORDEN, @RCD_ORD_COMP, @RCD_FECHARECSAL, @FID_INDICED,
				@FI_FOLIO,  @OR_CODIGO, @ORD_INDICED, @RCD_LOTE, @ti_codigo, @RCD_CANTEMP, @MA_EMPAQUE)
				
				
		
			FETCH NEXT FROM cur_entsalrecepcion INTO @RC_CODIGO, @MA_CODIGO, @RCD_NOPARTE, @RCD_NOMBRE, @RCD_NAME, @RCD_CANT, 	
				@RCD_COS_UNI, @RCD_COS_TOT, @RCD_CAN_ALM, @ME_CODIGO, @ME_ALM, @RCD_OBSERVA, 
				@EQ_ALM, @CL_CODIGO, @RCD_NOORDEN, @RCD_ORD_COMP, @RCD_FECHARECSAL, @ALMD_CODIGO, @FID_INDICED,
				@FI_FOLIO,  @END_ORD_COMP, @OR_CODIGO, @ORD_INDICED, @RCD_LOTE, @RCD_CANTEMP, @MA_EMPAQUE
			END
		
			CLOSE cur_entsalrecepcion
			DEALLOCATE cur_entsalrecepcion
		
		
		FETCH NEXT FROM cur_entsal INTO @ALM_CORTO, @ALM_RECEPCION
		END
	
	CLOSE cur_entsal
	DEALLOCATE cur_entsal

	update RECIBEMAT
	set rc_estatus='R'	where rc_codigo=@rc_codigo

	select @en_codigo= max(en_codigo) from entsalalm
	update consecutivo
	set cv_codigo =  isnull(@en_codigo,0) + 1
	where cv_tipo = 'EN'
	select @end_indiced= max(end_indiced) from entsalalmdet
	update consecutivo
	set cv_codigo =  isnull(@end_indiced,0) + 1
	where cv_tipo = 'END'

*/
GO
