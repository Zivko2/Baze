SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO





























CREATE PROCEDURE [dbo].[SP_IMPEXCELPERMISO] (@Codigo int)   as

SET NOCOUNT ON 
DECLARE @consecutivo INT, @PED_indiced INT


DELETE FROM IMPEXCELPERMISO WHERE NOPARTE='-1'

	ALTER TABLE PERMISODET DISABLE TRIGGER INSERT_PERMISODET

-- se actualiza el COSTOUNIT en caso de que venga nulo o igual a cero
UPDATE dbo.IMPEXCELPERMISO
SET     dbo.IMPEXCELPERMISO.COSTOUNIT= ISNULL(dbo.CATEGPERMISO.CPE_COSTO, 0)
FROM         dbo.IMPEXCELPERMISO INNER JOIN
                      dbo.CATEGPERMISO ON dbo.IMPEXCELPERMISO.NOPARTE = dbo.CATEGPERMISO.CPE_CORTO 
WHERE (dbo.IMPEXCELPERMISO.COSTOUNIT=0 OR dbo.IMPEXCELPERMISO.COSTOUNIT IS NULL)


UPDATE dbo.IMPEXCELPERMISO
SET     dbo.IMPEXCELPERMISO.COSTOUNIT= 0
WHERE dbo.IMPEXCELPERMISO.COSTOUNIT IS NULL



UPDATE dbo.IMPEXCELPERMISO
SET     dbo.IMPEXCELPERMISO.CANTIDAD= 0
WHERE dbo.IMPEXCELPERMISO.CANTIDAD IS NULL



--borra los errores generados en otras importaciones

DELETE FROM IMPORTLOG WHERE IML_CBFORMA=27

if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS

--borra los registros de la tabla que se hayan importado sin numero de parte
delete from IMPEXCELPERMISO where NOPARTE=''


-- revisa si existen en el catalogo CATEGPERMISO
if exists(SELECT dbo.IMPEXCELPERMISO.NOPARTE
	FROM         dbo.CATEGPERMISO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPERMISO ON dbo.CATEGPERMISO.CPE_CORTO = dbo.IMPEXCELPERMISO.NOPARTE
	WHERE     (dbo.CATEGPERMISO.CPE_CORTO IS NULL))

	INSERT INTO IMPORTLOG (IML_MENSAJE,IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR LA CATEGORIA : ' +dbo.IMPEXCELPERMISO.NOPARTE +' POR QUE NO EXISTE EN EL CAT. CATEGORIAS P/ PERMISO' , 27
	FROM         dbo.CATEGPERMISO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPERMISO ON dbo.CATEGPERMISO.CPE_CORTO = dbo.IMPEXCELPERMISO.NOPARTE
	WHERE     (dbo.CATEGPERMISO.CPE_CORTO IS NULL) 



if exists(SELECT dbo.IMPEXCELPERMISO.NOPARTEPADRE
	FROM         dbo.CATEGPERMISO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPERMISO ON dbo.CATEGPERMISO.CPE_CORTO = dbo.IMPEXCELPERMISO.NOPARTEPADRE
	WHERE     (dbo.CATEGPERMISO.CPE_CORTO IS NULL))

	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR LA CATEGORIA (PADRE): ' +dbo.IMPEXCELPERMISO.NOPARTEPADRE +' POR QUE NO EXISTE EN EL CAT. CATEGORIAS P/ PERMISO' , 27
	FROM         dbo.CATEGPERMISO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPERMISO ON dbo.CATEGPERMISO.CPE_CORTO = dbo.IMPEXCELPERMISO.NOPARTEPADRE
	WHERE     (dbo.CATEGPERMISO.CPE_CORTO IS NULL) and (dbo.IMPEXCELPERMISO.NOPARTEPADRE IS NOT NULL)



	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR LA CATEGORIA : ' +IMPEXCELPERMISO.NOPARTE +' NO TIENEN ASIGNADO EL PADRE (PRODUCTO AL QUE PERTENECEN)' , 27
	FROM         IMPEXCELPERMISO 
	WHERE     (IMPEXCELPERMISO.TIPO = '1') and (IMPEXCELPERMISO.NOPARTEPADRE IS NULL)


	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT 'NO SE PUEDE IMPORTAR LA CATEGORIA : ' +dbo.IMPEXCELPERMISO.NOPARTE+' POR QUE NO TIENE ASIGNADO EL TIPO DE MATERIAL', 27
	FROM dbo.IMPEXCELPERMISO 
	WHERE TIPO IS NULL


	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT 'NO SE PUEDE IMPORTAR EL SECTOR : ' +dbo.IMPEXCELPERMISO.SECTOR+' POR QUE NO SE ENCUENTRA DADO DE ALTA EN EL CAT. DE SECTORES', 27
	FROM dbo.IMPEXCELPERMISO  LEFT OUTER JOIN SECTOR ON IMPEXCELPERMISO.SECTOR = SECTOR.SE_CLAVE
	WHERE SE_CLAVE IS NULL AND dbo.IMPEXCELPERMISO.SECTOR <>'' AND dbo.IMPEXCELPERMISO.SECTOR IS NOT NULL


		select @consecutivo=cv_codigo from consecutivo
		where cv_tipo = 'PED'
	-- insercion de productos terminados
			INSERT INTO PERMISODET (PED_INDICED, PE_CODIGO, PED_REGISTROTIPO, MA_GENERICO, MA_NOPARTE, PED_NOMBRE, TI_CODIGO, ME_COM, AR_IMPMX, AR_EXPMX, 
	                      PED_ID_SUBORD, PED_CONSECUTIVO, PED_CANT, SE_CODIGO, PED_COSTO, PED_COSTOT, PED_SALDO, PED_SALDOCOSTOT, 
	                      PED_CAS_NUM) 
		
		
			SELECT     dbo.IMPEXCELPERMISO.ORDEN+@consecutivo, @Codigo, 1, CATEGPERMISO.CPE_CODIGO, IMPEXCELPERMISO.NOPARTE, CATEGPERMISO.CPE_DESC, 14,  
				CATEGPERMISO.ME_CODIGO, 0, isnull(ARANCEL.AR_CODIGO,0), 0, dbo.IMPEXCELPERMISO.ORDEN, isnull(IMPEXCELPERMISO.CANTIDAD,0), isnull(SECTOR.SE_CODIGO,0), 
			             isnull(IMPEXCELPERMISO.COSTOUNIT,0), isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0),  isnull(IMPEXCELPERMISO.CANTIDAD,0), 
				isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0), IMPEXCELPERMISO.CASNUM
			FROM         IMPEXCELPERMISO INNER JOIN
			                      CATEGPERMISO ON IMPEXCELPERMISO.NOPARTE = CATEGPERMISO.CPE_CORTO LEFT OUTER JOIN
			                      SECTOR ON IMPEXCELPERMISO.SECTOR = SECTOR.SE_CLAVE LEFT OUTER JOIN
			                      ARANCEL ON IMPEXCELPERMISO.FRACCION = ARANCEL.AR_FRACCION
			WHERE  (IMPEXCELPERMISO.TIPO = '0')
			ORDER BY dbo.IMPEXCELPERMISO.ORDEN
	


	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'EN EL ARCHIVO NO SE ENCUENTRA LA CATEGORIA PADRE : ' +IMPEXCELPERMISO.NOPARTEPADRE +' POR LO TANTO LA CATEGORIA COMPONENTE: '+IMPEXCELPERMISO.NOPARTE+' NO SE PODRA IMPORTAR', 27
	FROM         IMPEXCELPERMISO
	WHERE     (IMPEXCELPERMISO.TIPO = '1') 
	and (select p2.noparte from IMPEXCELPERMISO p2 where p2.noparte=IMPEXCELPERMISO.NOPARTEPADRE and p2.TIPO = '0') is null
	GROUP BY  IMPEXCELPERMISO.NOPARTEPADRE, IMPEXCELPERMISO.NOPARTE


-- insercion a la tabla permisodet
--PRODUCTO TERMINADO PED_REGISTROTIPO=1 Y PED_ID_SUBORD=0
-- MATERIA PRIMA PED_REGISTROTIPO=1 Y PED_ID_SUBORD>0 (CONSECUTIVO DEL PRODUCTO AL QUE PERTENECE)
--HERRAMIENTA PED_REGISTROTIPO=3
--EQUIPO PED_REGISTROTIPO=4
--CONTENEDORES PED_REGISTROTIPO=2

	
	
		select @consecutivo=cv_codigo from consecutivo
		where cv_tipo = 'PED'
	
			INSERT INTO PERMISODET (PED_INDICED, PE_CODIGO, PED_REGISTROTIPO, MA_GENERICO, MA_NOPARTE, PED_NOMBRE, TI_CODIGO, ME_COM, AR_IMPMX, AR_EXPMX, 
	                      PED_ID_SUBORD, PED_CONSECUTIVO, PED_CANT, SE_CODIGO, PED_COSTO, PED_COSTOT, PED_SALDO, PED_SALDOCOSTOT, 
	                      PED_CAS_NUM) 
		
		
			SELECT     dbo.IMPEXCELPERMISO.ORDEN+@consecutivo, @Codigo, 1, CATEGPERMISO.CPE_CODIGO, IMPEXCELPERMISO.NOPARTE, CATEGPERMISO.CPE_DESC, 10,  
				CATEGPERMISO.ME_CODIGO,  isnull(ARANCEL.AR_CODIGO,0), 0, (select PED_INDICED from permisodet where pe_codigo=@Codigo and permisodet.ma_noparte=IMPEXCELPERMISO.NOPARTEPADRE and permisodet.ped_cant=IMPEXCELPERMISO.CANTIDAD),
				dbo.IMPEXCELPERMISO.ORDEN, isnull(IMPEXCELPERMISO.CANTIDAD,0), isnull(SECTOR.SE_CODIGO,0), 
			             isnull(IMPEXCELPERMISO.COSTOUNIT,0), isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0),  isnull(IMPEXCELPERMISO.CANTIDAD,0), 
				isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0), IMPEXCELPERMISO.CASNUM
			FROM         IMPEXCELPERMISO INNER JOIN
			                      CATEGPERMISO ON IMPEXCELPERMISO.NOPARTE = CATEGPERMISO.CPE_CORTO LEFT OUTER JOIN
			                      SECTOR ON IMPEXCELPERMISO.SECTOR = SECTOR.SE_CLAVE LEFT OUTER JOIN
			                      ARANCEL ON IMPEXCELPERMISO.FRACCION = ARANCEL.AR_FRACCION
			WHERE     (IMPEXCELPERMISO.NOPARTE IS NOT NULL) AND (IMPEXCELPERMISO.TIPO = '1') AND
				     (select PED_INDICED from permisodet where pe_codigo=@Codigo and permisodet.ma_noparte=IMPEXCELPERMISO.NOPARTEPADRE and permisodet.ped_cant=IMPEXCELPERMISO.CANTIDAD) IS NOT NULL
			ORDER BY dbo.IMPEXCELPERMISO.ORDEN
	
	
		select @consecutivo=cv_codigo from consecutivo
		where cv_tipo = 'PED'
	
			INSERT INTO PERMISODET (PED_INDICED, PE_CODIGO, PED_REGISTROTIPO, MA_GENERICO, MA_NOPARTE, PED_NOMBRE, TI_CODIGO, ME_COM, AR_IMPMX, AR_EXPMX, 
	                      PED_ID_SUBORD, PED_CONSECUTIVO, PED_CANT, SE_CODIGO, PED_COSTO, PED_COSTOT, PED_SALDO, PED_SALDOCOSTOT, 
	                      PED_CAS_NUM) 
		
		
			SELECT     dbo.IMPEXCELPERMISO.ORDEN+@consecutivo, @Codigo, IMPEXCELPERMISO.TIPO, CATEGPERMISO.CPE_CODIGO, IMPEXCELPERMISO.NOPARTE, CATEGPERMISO.CPE_DESC, CATEGPERMISO.TI_CODIGO,
				CATEGPERMISO.ME_CODIGO, isnull(ARANCEL.AR_CODIGO,0), 0, 0, dbo.IMPEXCELPERMISO.ORDEN, isnull(IMPEXCELPERMISO.CANTIDAD,0), isnull(SECTOR.SE_CODIGO,0), 
			             isnull(IMPEXCELPERMISO.COSTOUNIT,0), isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0),  isnull(IMPEXCELPERMISO.CANTIDAD,0), 
				isnull(IMPEXCELPERMISO.COSTOUNIT*IMPEXCELPERMISO.CANTIDAD,0), IMPEXCELPERMISO.CASNUM
			FROM         IMPEXCELPERMISO INNER JOIN
			                      CATEGPERMISO ON IMPEXCELPERMISO.NOPARTE = CATEGPERMISO.CPE_CORTO LEFT OUTER JOIN
			                      SECTOR ON IMPEXCELPERMISO.SECTOR = SECTOR.SE_CLAVE LEFT OUTER JOIN
			                      ARANCEL ON IMPEXCELPERMISO.FRACCION = ARANCEL.AR_FRACCION
			WHERE     (IMPEXCELPERMISO.TIPO <> '1') and (IMPEXCELPERMISO.TIPO <> '0')
			ORDER BY dbo.IMPEXCELPERMISO.ORDEN



select @PED_indiced= max(PED_indiced) from PERMISODET

	update consecutivo
	set cv_codigo =  isnull(@PED_indiced,0) + 1
	where cv_tipo = 'PED'

	ALTER TABLE PERMISODET ENABLE TRIGGER INSERT_PERMISODET


	TRUNCATE TABLE IMPEXCELPERMISO
GO
