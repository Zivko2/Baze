SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO






CREATE PROCEDURE [dbo].[SP_ACTUALIZAEQFACTIMP] (@FI_CODIGO int)   as

SET NOCOUNT ON 

	-- FACTORES DE CONVERSION GRUPO GENERICO
	/*==================================================================*/
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_GEN=dbo.EQUIVALE.EQ_CANT
		FROM         dbo.EQUIVALE INNER JOIN
		                      dbo.FACTIMPDET ON dbo.EQUIVALE.ME_CODIGO2 = dbo.FACTIMPDET.ME_GEN AND 
		                      dbo.EQUIVALE.ME_CODIGO1 = dbo.FACTIMPDET.ME_CODIGO INNER JOIN
		                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE     dbo.FACTIMP.FI_CODIGO = @FI_CODIGO



		-- me_gen igual a Kg
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_GEN = dbo.FACTIMPDET.FID_PES_UNI
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMPDET.FID_PES_UNI>0 AND dbo.FACTIMPDET.ME_GEN in (select ME_KILOGRAMOS from configuracion) 
			AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_GEN = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE (dbo.FACTIMPDET.FID_PES_UNI is null or  dbo.FACTIMPDET.FID_PES_UNI=0) 
			AND dbo.FACTIMPDET.ME_GEN in (select ME_KILOGRAMOS from configuracion) 
			AND dbo.FACTIMPDET.ME_CODIGO not in (SELECT ME_CODIGO1 FROM EQUIVALE
			WHERE     ME_CODIGO2 in (select ME_KILOGRAMOS from configuracion))
			AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO



		-- en base a maestromedida
		UPDATE dbo.FACTIMPDET
		SET     dbo.FACTIMPDET.EQ_GEN= dbo.MAESTROMEDIDA.EQ_CANTIDAD
		FROM         dbo.MAESTRO MAESTRO_1 INNER JOIN
	                      dbo.MAESTRO ON MAESTRO_1.MA_CODIGO = dbo.MAESTRO.MA_GENERICO INNER JOIN
	                      dbo.FACTIMPDET INNER JOIN
	                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO INNER JOIN
	                      dbo.MAESTROMEDIDA ON dbo.FACTIMPDET.MA_CODIGO = dbo.MAESTROMEDIDA.MA_CODIGO AND 
	                      dbo.FACTIMPDET.ME_CODIGO = dbo.MAESTROMEDIDA.ME_CODIGO ON dbo.MAESTRO.MA_CODIGO = dbo.MAESTROMEDIDA.MA_CODIGO AND 
	                      MAESTRO_1.ME_COM = dbo.FACTIMPDET.ME_GEN
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


		-- sin factor de conversion
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_GEN = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE (dbo.FACTIMPDET.EQ_GEN=0 OR dbo.FACTIMPDET.EQ_GEN IS NULL)
			AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


		-- unidades de medida iguales
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_GEN = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                            dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMPDET.ME_GEN =  dbo.FACTIMPDET.ME_CODIGO 
		  AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


-- FACTORES DE CONVERSION FRACCIONES 
/*===========================================*/

if exists (SELECT dbo.FACTIMPDET.AR_IMPMX FROM dbo.FACTIMP INNER JOIN dbo.FACTIMPDET ON dbo.FACTIMP.FI_CODIGO = dbo.FACTIMPDET.FI_CODIGO
WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
	AND dbo.FACTIMPDET.AR_IMPMX>0)
begin
	-- si existe en equivalencias
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_IMPMX=dbo.EQUIVALE.EQ_CANT
		FROM dbo.FACTIMPDET INNER JOIN dbo.ARANCEL ON dbo.FACTIMPDET.AR_IMPMX = dbo.ARANCEL.AR_CODIGO INNER JOIN
                      dbo.EQUIVALE ON dbo.FACTIMPDET.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO1 AND dbo.ARANCEL.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO2 INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO 
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO



	-- si la unidad de medida es kilogramos
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_IMPMX = dbo.FACTIMPDET.FID_PES_UNI
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND dbo.FACTIMPDET.FID_PES_UNI>0  AND dbo.FACTIMPDET.ME_ARIMPMX in (select ME_KILOGRAMOS from configuracion) 

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_IMPMX = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
			AND dbo.FACTIMPDET.ME_ARIMPMX in (select ME_KILOGRAMOS from configuracion) 


		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_IMPMX = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
		AND dbo.FACTIMPDET.ME_ARIMPMX in (select ME_KILOGRAMOS from configuracion) 
			AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


		-- en base a maestromedida
		UPDATE dbo.FACTIMPDET
		SET     dbo.FACTIMPDET.EQ_IMPMX= dbo.MAESTROMEDIDA.EQ_IMPMX
		FROM         dbo.ARANCEL INNER JOIN
		                      dbo.FACTIMPDET INNER JOIN
		                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO INNER JOIN
		                      dbo.MAESTROMEDIDA ON dbo.FACTIMPDET.MA_CODIGO = dbo.MAESTROMEDIDA.MA_CODIGO AND 
		                      dbo.FACTIMPDET.ME_CODIGO = dbo.MAESTROMEDIDA.ME_CODIGO ON dbo.ARANCEL.AR_CODIGO = dbo.FACTIMPDET.AR_IMPMX AND 
		                      dbo.ARANCEL.ME_CODIGO = dbo.FACTIMPDET.ME_ARIMPMX
		WHERE 	dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
		AND dbo.MAESTROMEDIDA.EQ_IMPMX IS NOT NULL


		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_IMPMX = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMPDET.ME_ARIMPMX = dbo.FACTIMPDET.ME_CODIGO
			AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO

end


/* factor de conversion de fraccion importacion usa */


if exists (SELECT dbo.FACTIMPDET.AR_EXPFO FROM dbo.FACTIMP INNER JOIN dbo.FACTIMPDET ON dbo.FACTIMP.FI_CODIGO = dbo.FACTIMPDET.FI_CODIGO
WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
	AND (dbo.FACTIMPDET.AR_EXPFO>0))
begin
	-- si existe en equivalencias
	if exists (SELECT dbo.FACTIMPDET.EQ_EXPFO FROM dbo.FACTIMPDET INNER JOIN dbo.ARANCEL ON dbo.FACTIMPDET.AR_EXPFO= dbo.ARANCEL.AR_CODIGO INNER JOIN
                      dbo.EQUIVALE ON dbo.FACTIMPDET.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO1 AND dbo.ARANCEL.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO2 INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO WHERE 
					dbo.FACTIMP.FI_CODIGO = @FI_CODIGO)

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO=dbo.EQUIVALE.EQ_CANT
		FROM dbo.FACTIMPDET INNER JOIN dbo.ARANCEL ON dbo.FACTIMPDET.AR_EXPFO= dbo.ARANCEL.AR_CODIGO INNER JOIN
                      dbo.EQUIVALE ON dbo.FACTIMPDET.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO1 AND dbo.ARANCEL.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO2 INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO 
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO



	-- si la unidad de medida es kilogramos
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO = dbo.FACTIMPDET.FID_PES_UNI
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND dbo.FACTIMPDET.FID_PES_UNI>0 AND dbo.FACTIMPDET.FID_PES_UNI IS NOT NULL
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)
		AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO


		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                           dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO=dbo.FACTIMPDET.ME_CODIGO AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)
end


if exists (SELECT dbo.FACTIMPDET.AR_EXPFO FROM dbo.FACTIMP INNER JOIN dbo.FACTIMPDET ON dbo.FACTIMP.FI_CODIGO = dbo.FACTIMPDET.FI_CODIGO
WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
	 AND (dbo.FACTIMPDET.AR_EXPFO>0))
begin
	-- si existe en equivalencias
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO2=dbo.EQUIVALE.EQ_CANT
		FROM dbo.FACTIMPDET INNER JOIN dbo.ARANCEL ON dbo.FACTIMPDET.AR_EXPFO= dbo.ARANCEL.AR_CODIGO INNER JOIN
                      dbo.EQUIVALE ON dbo.FACTIMPDET.ME_CODIGO = dbo.EQUIVALE.ME_CODIGO1 AND dbo.ARANCEL.ME_CODIGO2 = dbo.EQUIVALE.ME_CODIGO2 INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO 
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO



	-- si la unidad de medida es kilogramos
		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO2 = dbo.FACTIMPDET.FID_PES_UNI
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND dbo.FACTIMPDET.FID_PES_UNI>0 AND dbo.FACTIMPDET.FID_PES_UNI IS NOT NULL
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO2 in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO2 = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
			AND (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO2 in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO2 = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE (dbo.FACTIMPDET.FID_PES_UNI=0 OR dbo.FACTIMPDET.FID_PES_UNI IS NULL)
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO2 in (select ME_KILOGRAMOS from configuracion) AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)
		AND dbo.FACTIMP.FI_CODIGO = @FI_CODIGO

		UPDATE dbo.FACTIMPDET
		SET dbo.FACTIMPDET.EQ_EXPFO2 = 1
		FROM  dbo.FACTIMPDET INNER JOIN
                      dbo.FACTIMP ON dbo.FACTIMPDET.FI_CODIGO = dbo.FACTIMP.FI_CODIGO
		WHERE dbo.FACTIMP.FI_CODIGO = @FI_CODIGO
		AND dbo.FACTIMPDET.AR_EXPFO IN (SELECT AR_CODIGO FROM ARANCEL WHERE ME_CODIGO2=dbo.FACTIMPDET.ME_CODIGO AND AR_CODIGO=dbo.FACTIMPDET.AR_EXPFO)
end

GO
