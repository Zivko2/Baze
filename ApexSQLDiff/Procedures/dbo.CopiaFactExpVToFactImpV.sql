SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
--copia una factura de exportacion virtual de una bd origen a una factura de importacion virtual a una bd destino
CREATE PROCEDURE [dbo].[CopiaFactExpVToFactImpV] (@FE_CODIGO INT, @FE_TIPO CHAR(1), @BDOrigen varchar(50), @BDDestino varchar(50))    as


	

		DECLARE @MAXIMO varchar(50), @MAXIMO1 INT

	if @FE_TIPO<>'S' 
	begin
		SELECT @MAXIMO=convert(varchar(50),ISNULL(MAX(FI_CODIGO),0)+1) FROM FACTIMP
			
		
		exec('insert into FACTIMP(FI_CODIGO, FI_FOLIO, FI_FECHA, TF_CODIGO, TQ_CODIGO, FI_TIPO, FI_PINICIAL, FI_PFINAL, FC_CODIGO, TN_CODIGO, FI_NO_SEM, 
		                      FI_DOCUMENTO, AG_MEX, AG_USA, CL_PROD, DI_PROD, CL_COMP, DI_COMP, PR_CODIGO, DI_PROVEE,
		                      CL_EXP, DI_EXP, CL_DESTINT, DI_DESTINT, CL_DESTFIN, DI_DESTFIN, CL_VEND, DI_VEND, 
		                      CL_IMP, DI_IMP, PU_CARGA, PU_SALIDA, PU_ENTRADA, PU_DESTINO, FI_FEC_ENV, FI_FEC_ARR,  
		                      FI_NUM_INBON, FI_TIPO_INBON, FI_FEC_INBON, FI_COMENTA, FI_COMENTAUS, US_CODIGO, 
		                      FI_CONT_REG, FI_GUIA, FI_GUIAORIGEN,                    
		                      FI_TOTALB, FI_TIPOCAMBIO, 
		                      MO_CODIGO, SPI_CODIGO, FI_DESCRIPTION1, FI_DESCRIPTION2, FI_INVOICETYPE, FI_HEADER, FI_FOOTER, FI_CUENTADET, 
		                      AGT_CODIGO, FI_NUMVEHICULOS, 
		                      FI_PRIORIDAD, CP_CODIGO)
		
		SELECT     '+@MAXIMO+',FE_FOLIO, FE_FECHA, CASE WHEN FE_TIPO=''V'' THEN (SELECT TF_CODIGO FROM TFACTURA WHERE TF_NOMBRE=''IMPORTACION VIRTUAL'')
			         WHEN TQ_CODIGO=13 THEN 10 ELSE 5 END, TQ_CODIGO, FE_TIPO, FE_PINICIAL, FE_PFINAL, FC_CODIGO, TN_CODIGO, ISNULL(FE_NO_SEM,''''), 
		                      FE_DOCUMENTO, AG_MX, AG_US, CL_PROD, DI_PROD, CL_COMP, DI_COMP, CL_PROD, DI_PROD,  
		                      CL_IMP, DI_IMP, CL_DESTINI, DI_DESTINI, CL_DESTINI, DI_DESTINI, CL_VEND, DI_VEND, 
		                      CL_EXP, DI_EXP, PU_CARGA, PU_SALIDA, PU_ENTRADA, PU_DESTINO, FE_FEC_ENV, FE_FEC_ARR, 
		                      FE_NUM_INBON, FE_TIPO_INBON, FE_FEC_INBON, FE_COMENTA, FE_COMENTAUS, US_CODIGO, 
		                      ISNULL(FE_CONT1_REG,''''), ISNULL(FE_GUIA1,''''), FE_GUIA2,                      
		                      FE_TOTALB, FE_TIPOCAMBIO, 
		                      MO_CODIGO, SPI_CODIGO, ISNULL(FE_DESCRIPTION1,''''), ISNULL(FE_DESCRIPTION2,''''), FE_INVOICETYPE, FE_HEADER, FE_FOOTER, 
		                      FE_CUENTADET, AGT_CODIGO, FE_NUMVEHICULOS, 
		                      FE_PRIORIDAD, CP_CODIGO
		FROM         '+@BDOrigen+'.DBO.FACTEXP
		WHERE FE_FOLIO NOT IN (SELECT FI_FOLIO FROM FACTIMP) AND FE_CODIGO='+@FE_CODIGO)
		
		
			update consecutivo
			set cv_codigo =  isnull((select max(FI_CODIGO) from FACTIMP),0) + 1
			where cv_tipo = 'FI'
		
		
			IF  NOT EXISTS (SELECT name 
				   FROM  [tempdb].dbo.sysobjects 
				   WHERE  (name = '##FACTIMPDET' )
				   AND 	 ( type = 'U'))
			begin
				CREATE TABLE [##FACTIMPDET] (
					[FID_INDICED] [int] IDENTITY (1, 1) NOT NULL ,
					[FI_CODIGO] [int] NOT NULL ,
					[FID_NOPARTE] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
					[FID_NOMBRE] [varchar] (150) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
					[FID_NAME] [varchar] (150) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
					[FID_CANT_ST] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_CANT_ST] DEFAULT (0),
					[FID_COS_UNI] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_COS_UNI] DEFAULT (0),
					[FID_COS_TOT] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_COS_TOT] DEFAULT (0),
					[FID_PES_UNI] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_UNI] DEFAULT (0),
					[FID_PES_NET] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_NET] DEFAULT (0),
					[FID_PES_BRU] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_BRU] DEFAULT (0),
					[FID_PES_UNILB] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_UNILB] DEFAULT (0),
					[FID_PES_NETLB] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_NETLB] DEFAULT (0),
					[FID_PES_BRULB] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PES_BRULB] DEFAULT (0),
					[OR_CODIGO] [int] NULL ,
					[FID_ORD_COMP] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[ORD_INDICED] [int] NULL ,
					[FID_NOORDEN] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_OBSERVA] [varchar] (1100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_FEC_ENT] [datetime] NULL ,
					[FID_NUM_ENT] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_SEC_IMP] [smallint] NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_SEC_IMP] DEFAULT (0),
					[FID_POR_DEF] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_POR_DEF] DEFAULT ((-1)),
					[FID_DEF_TIP] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_DEF_TIP] DEFAULT ('G'),
					[FID_ENVIO] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[AR_IMPMX] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_AR_IMPMX] DEFAULT (0),
					[AR_EXPFO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_AR_EXPFO] DEFAULT (0),
					[MA_CODIGO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_MA_CODIGO] DEFAULT (0),
					[MV_CODIGO] [int] NULL ,
					[ME_CODIGO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_ME_CODIGO] DEFAULT (0),
					[MA_GENERICO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_MA_GENERICO] DEFAULT (0),
					[ME_ARIMPMX] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_ME_ARIMPMX] DEFAULT (0),
					[PA_CODIGO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_PA_CODIGO] DEFAULT (0),
					[PR_CODIGO] [int] NULL ,
					[PL_FOLIO] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[PL_CODIGO] [int] NULL ,
					[PLD_INDICED] [int] NULL ,
					[CS_CODIGO] [smallint] NOT NULL CONSTRAINT [DF_FACTIMPDET_CS_CODIGO] DEFAULT (8),
					[PE_CODIGO] [int] NULL ,
					[EQ_GEN] [decimal](28, 14) NOT NULL CONSTRAINT [DF_FACTIMPDET_EQ_GEN] DEFAULT (1),
					[EQ_IMPMX] [decimal](28, 14) NOT NULL CONSTRAINT [DF_FACTIMPDET_EQ_IMPMX] DEFAULT (1),
					[EQ_EXPFO] [decimal](28, 14) NOT NULL CONSTRAINT [DF_FACTIMPDET_EQ_EXPFO] DEFAULT (1),
					[TI_CODIGO] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_TI_CODIGO] DEFAULT (0),
					[FID_RATEEXPFO] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_RATEEXPFO] DEFAULT (0),
					[FID_RELEMP] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_RELEMP] DEFAULT ('N'),
					[SPI_CODIGO] [smallint] NOT NULL CONSTRAINT [DF_FACTIMPDET_SPI_CODIGO] DEFAULT (0),
					[MA_EMPAQUE] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_MA_EMPAQUE] DEFAULT (0),
					[FID_CANTEMP] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_CANTEMP] DEFAULT (0),
					[FID_LOTE] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_FAC_NUM] [varchar] (15) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_FEC_ENV] [datetime] NULL ,
					[FID_LISTA] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_CON_CERTORIG] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[ME_GEN] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_ME_GEN] DEFAULT (0),
					[FID_GENERA_EMP] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_GENERA_EMP] DEFAULT ('D'),
					[FID_CANT_DESP] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_CANT_DESP] DEFAULT (0),
					[FID_DEFTXT1] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF_FACTIMPDET_FID_DEFTXT1] DEFAULT (''),
					[FID_DEFTXT2] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL CONSTRAINT [DF_FACTIMPDET_FID_DEFTXT2] DEFAULT (''),
					[FID_DEFNO3] [decimal](38, 6) NULL ,
					[FID_DEFNO4] [decimal](38, 6) NULL ,
					[FID_FECHA_STRUCT] [datetime] NULL ,
					[FID_PADREKITINSERT] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_PADREKITINSERT] DEFAULT ('S'),
					[PID_INDICEDLIGA] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_PID_INDICEDLIGA] DEFAULT ((-1)),
					[PID_INDICEDLIGAR1] [int] NOT NULL CONSTRAINT [DF_FACTIMPDET_PID_INDICEDLIGAR1] DEFAULT ((-1)),
					[TCO_CODIGO] [smallint] NOT NULL CONSTRAINT [DF_FACTIMPDET_TCO_CODIGO] DEFAULT (0),
					[FID_RELCAJAS] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_SALDO] [decimal](38, 6) NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_SALDO] DEFAULT (0),
					[FID_ENUSO] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_ENUSO] DEFAULT ('N'),
					[FID_NOPARTEAUX] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[FID_REFTASA] [varchar] (30) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
					[EQ_EXPFO2] [decimal](28, 14) NOT NULL CONSTRAINT [DF_FACTIMPDET_EQ_EXPFO2] DEFAULT (1),
					[FID_GENERA_EMPDET] [char] (1) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL CONSTRAINT [DF_FACTIMPDET_FID_GENERA_EMPDET] DEFAULT ('D'),
					[FID_PARTIDA] [int] NULL ,
					[FID_FECHAREFTASA] [datetime] NULL ,
					CONSTRAINT [PK_FACTIMPDET] PRIMARY KEY  NONCLUSTERED 
					(
						[FID_INDICED]
					)  ON [PRIMARY] 
				) ON [PRIMARY]
		
			end
		
		
		
			SELECT @MAXIMO1=ISNULL(MAX(FID_INDICED),0)+1 FROM FACTIMPDET
			DBCC CHECKIDENT ([##FACTIMPDET], RESEED, @MAXIMO1)
		
		
		
			EXEC('INSERT INTO ##FACTIMPDET (FI_CODIGO, MA_CODIGO, FID_NOMBRE, FID_NOPARTE, FID_NAME, 
			                      ME_CODIGO, FID_OBSERVA, FID_CANT_ST, FID_COS_UNI, FID_COS_TOT, 
			                      FID_PES_UNI, FID_PES_NET, FID_PES_BRU, FID_PES_UNILB, 
			                      FID_PES_NETLB, FID_PES_BRULB, FID_SEC_IMP, FID_DEF_TIP, 
			                      FID_POR_DEF, FID_LOTE, AR_IMPMX, MA_GENERICO, PA_CODIGO, EQ_GEN,
			                      EQ_IMPMX, TI_CODIGO, FID_FECHA_STRUCT, SPI_CODIGO,  
			                      MA_EMPAQUE, FID_CANTEMP, FID_FAC_NUM, FID_FEC_ENV,
			                      ME_GEN, ME_ARIMPMX, TCO_CODIGO, FID_NOPARTEAUX)
		
			SELECT     '+@MAXIMO+', MAESTRO_1.MA_CODIGO, FACTEXPDETOrig.FED_NOMBRE, FACTEXPDETOrig.FED_NOPARTE, FACTEXPDETOrig.FED_NAME, 
			                      FACTEXPDETOrig.ME_CODIGO, FACTEXPDETOrig.FED_OBSERVA, FACTEXPDETOrig.FED_CANT, FACTEXPDETOrig.FED_COS_UNI, FACTEXPDETOrig.FED_COS_TOT, 
			                      FACTEXPDETOrig.FED_PES_UNI, FACTEXPDETOrig.FED_PES_NET, FACTEXPDETOrig.FED_PES_BRU, FACTEXPDETOrig.FED_PES_UNILB, 
			                      FACTEXPDETOrig.FED_PES_NETLB, FACTEXPDETOrig.FED_PES_BRULB, FACTEXPDETOrig.FED_SEC_IMP, FACTEXPDETOrig.FED_DEF_TIP, 
			                      FACTEXPDETOrig.FED_POR_DEF, FACTEXPDETOrig.FED_LOTE, FACTEXPDETOrig.AR_EXPMX,
			                      MAESTRO_2..MA_GENERICO, FACTEXPDETOrig.PA_CODIGO, FACTEXPDETOrig.EQ_GEN,
			                      FACTEXPDETOrig.EQ_EXPMX, FACTEXPDETOrig.TI_CODIGO, 
			                      FACTEXPDETOrig.FED_FECHA_STRUCT, FACTEXPDETOrig.SPI_CODIGO, 
			                      FACTEXPDETOrig.MA_EMPAQUE, FACTEXPDETOrig.FED_CANTEMP, 
			                      FACTEXPDETOrig.FED_FAC_NUM, FACTEXPDETOrig.FED_FEC_ENV,
			                      FACTEXPDETOrig.ME_GENERICO, FACTEXPDETOrig.ME_AREXPMX, FACTEXPDETOrig.TCO_CODIGO, 
			                      FACTEXPDETOrig.FED_NOPARTEAUX
			FROM         MAESTRO MAESTRO_1 INNER JOIN
			                      '+@BDOrigen+'.DBO.MAESTRO MAESTROOrig ON MAESTRO_1.MA_NOPARTE = MAESTROOrig.MA_NOPARTE AND MAESTRO_1.MA_NOPARTEAUX = MAESTROOrig.MA_NOPARTEAUX 
					AND MAESTRO_1.MA_INV_GEN = MAESTROOrig.MA_INV_GEN INNER JOIN
			                      '+@BDOrigen+'.DBO.FACTEXPDET FACTEXPDETOrig ON MAESTROOrig.MA_CODIGO = FACTEXPDETOrig.MA_CODIGO
			                      '+@BDOrigen+'.DBO.MAESTRO MAESTROOrigG ON FACTEXPDETOrig.MA_GENERICO = MAESTROOrigG.MA_CODIGO LEFT OUTER JOIN
			                      MAESTRO  MAESTRO_2 ON MAESTROOrigG.MA_NOPARTE =MAESTRO_2.MA_NOPARTE and MAESTROOrigG.MA_NOPARTEAUX =MAESTRO_2.MA_NOPARTEAUX 
					AND MAESTROOrigG.MA_INV_GEN = MAESTRO_2.MA_INV_GEN
			WHERE FACTEXPDETOrig.FE_CODIGO='+@FE_CODIGO)
		
		
			INSERT INTO FACTIMPDET(FI_CODIGO, FID_INDICED, MA_CODIGO, FID_NOMBRE, FID_NOPARTE, FID_NAME, ME_CODIGO, FID_OBSERVA, 
					      FID_CANT_ST, FID_COS_UNI, FID_COS_TOT, FID_PES_UNI, FID_PES_NET, FID_PES_BRU, FID_PES_UNILB, 
			                      FID_PES_NETLB, FID_PES_BRULB, FID_SEC_IMP, FID_DEF_TIP, FID_POR_DEF, FID_LOTE, AR_IMPMX, 
					      MA_GENERICO, PA_CODIGO, EQ_GEN, EQ_IMPMX, TI_CODIGO, FID_FECHA_STRUCT, SPI_CODIGO,  
			                      MA_EMPAQUE, FID_CANTEMP, FID_FAC_NUM, FID_FEC_ENV, ME_GEN, ME_ARIMPMX, TCO_CODIGO, 
					      FID_NOPARTEAUX)
		
			SELECT FI_CODIGO, FID_INDICED, MA_CODIGO, FID_NOMBRE, FID_NOPARTE, FID_NAME, ME_CODIGO, FID_OBSERVA, FID_CANT_ST, 
					      FID_COS_UNI, FID_COS_TOT, FID_PES_UNI, FID_PES_NET, FID_PES_BRU, FID_PES_UNILB, 
			                      FID_PES_NETLB, FID_PES_BRULB, FID_SEC_IMP, FID_DEF_TIP, FID_POR_DEF, FID_LOTE, AR_IMPMX, 
					      MA_GENERICO, PA_CODIGO, EQ_GEN, EQ_IMPMX, TI_CODIGO, FID_FECHA_STRUCT, SPI_CODIGO,  
			                      MA_EMPAQUE, FID_CANTEMP, FID_FAC_NUM, FID_FEC_ENV, ME_GEN, ME_ARIMPMX, TCO_CODIGO, FID_NOPARTEAUX
			FROM ##FACTIMPDET
			
		
			update consecutivo
			set cv_codigo =  isnull((select max(FID_INDICED) from FACTIMPDET),0) + 1
			where cv_tipo = 'FID'
		
			DROP TABLE ##FACTIMPDET
		
		
	end
	else
	begin

		SELECT @MAXIMO=convert(varchar(50),ISNULL(MAX(PI_CODIGO),0)+1) FROM PEDIMP

		
		
		exec('insert into PEDIMP(PI_CODIGO, PI_FOLIO, PI_FEC_PAG, PI_FEC_ENT, PI_FEC_ENTPED, PI_TIPO, PI_SEM,  
		                      CL_CODIGO, DI_CL, PR_CODIGO, DI_PR, PI_TIP_CAM, AD_DES,
		                      AGT_CODIGO, CP_CODIGO, PI_MOVIMIENTO)
		
		SELECT     '+@MAXIMO+',FE_FOLIO, FE_FECHA, FE_FECHA, FE_FECHA, ''V'', ISNULL(FE_NO_SEM,''''), 
		                      CL_PROD, DI_PROD, CL_DESTINI, DI_DESTINI, FE_TIPOCAMBIO, (SELECT AD_CODIGO FROM CLIENTE    WHERE CL_EMPRESA=''S''),
			        AGT_CODIGO, (select cp_codigo from claveped where cp_clave=''TR''), ''E''
		FROM         '+@BDOrigen+'.DBO.FACTEXP
		WHERE FE_FOLIO NOT IN (SELECT PI_FOLIO FROM PEDIMP WHERE PI_TIPO=''V'') AND FE_CODIGO='+@FE_CODIGO)
		


		


			update consecutivo
			set cv_codigo =  isnull((select max(PI_CODIGO) from PEDIMP),0) + 1
			where cv_tipo = 'PI'
		
		
		
		

 			truncate TABLE TempPedImpDetF4
		
			SELECT @MAXIMO1=ISNULL(MAX(PID_INDICED),0)+1 FROM PEDIMPDET
			DBCC CHECKIDENT ([TempPedImpDetF4], RESEED, @MAXIMO1)
		
		
		

			exec('INSERT INTO TempPedImpDetF4 (PI_CODIGO, MA_CODIGO, PID_NOPARTE, PID_NOMBRE, PID_NAME, PID_COS_UNI, PID_COS_UNIADU, 
				PID_CANT, PID_CTOT_DLS, ME_CODIGO, MA_GENERICO, EQ_GENERICO, EQ_IMPMX, 
				AR_IMPMX, PID_SEC_IMP, PID_DEF_TIP, PID_POR_DEF, TI_CODIGO, PA_ORIGEN, SPI_CODIGO, 
				PA_PROCEDE, ME_GENERICO, ME_ARIMPMX, PID_CAN_GEN, PID_CAN_AR, PID_COS_UNIVA, PID_COS_UNIMATGRA, 
				PI_FEC_ENTPI, PID_NOPARTEAUX, PID_CTOT_MN, PID_PEDF4ORIG, PID_PES_UNIKG, PID_PEDTRANS,
				PID_FECHAPEDTRANS, AD_TRANS, CP_TRANS, PID_CODIGOFACT, PID_COS_UNIGEN)
		
			SELECT     '+@MAXIMO+', MAESTRO_1.MA_CODIGO, PEDIMPDETOrig.PID_NOPARTE, MAX(PEDIMPDETOrig.PID_NOMBRE), MAX(PEDIMPDETOrig.PID_NAME), 
			                     PEDIMPDETOrig.PID_COS_UNI, PID_COS_UNIADU, round(SUM(KARDESPEDOrig.KAP_CANTDESC/isnull(PEDIMPDETOrig.EQ_GENERICO,1)),6), round(SUM(KARDESPEDOrig.KAP_CANTDESC * ISNULL(PEDIMPDETOrig.PID_COS_UNIGEN, 0)),6),
			                       PEDIMPDETOrig.ME_CODIGO, MAESTRO_2.MA_CODIGO, 
			                      1, 1, ISNULL(PEDIMPDETOrig.AR_IMPMX, 0), PEDIMPDETOrig.PID_SEC_IMP, isnull(PEDIMPDETOrig.PID_DEF_TIP, ''G''), 
						PEDIMPDETOrig.PID_POR_DEF , ISNULL(PEDIMPDETOrig.TI_CODIGO, 10), PEDIMPDETOrig.PA_ORIGEN, PEDIMPDETOrig.SPI_CODIGO, (SELECT CF_PAIS_MX FROM CONFIGURACION), 
			                      max(PEDIMPDETOrig.ME_GENERICO), max(PEDIMPDETOrig.ME_ARIMPMX), round(SUM(KARDESPEDOrig.KAP_CANTDESC),6), round(SUM((KARDESPEDOrig.KAP_CANTDESC/isnull(PEDIMPDETOrig.EQ_GENERICO,1))* isnull(PEDIMPDETOrig.EQ_IMPMX,1)),6), 0, 0, PEDIMPOrig.PI_FEC_ENT,
					isnull(MAESTROOrig.MA_NOPARTEAUX,''''), round(SUM(KARDESPEDOrig.KAP_CANTDESC * ISNULL(PEDIMPDETOrig.PID_COS_UNIGEN * FACTEXPOrig.FE_TIPOCAMBIO, 0)),6),
				PEDIMPDETOrig.PI_CODIGO, MAX(PID_PES_UNIKG), AGENCIAPATENTEOrig.AGT_PATENTE+''-''+PEDIMPOrig.PI_FOLIO, PEDIMPOrig.PI_FEC_ENT, PEDIMPOrig.AD_DES, 
				case WHEN CONFIGURACLAVEPEDOrig.CCP_TIPO=''RE'' THEN PEDIMPOrig.CP_RECTIFICA ELSE PEDIMPOrig.CP_CODIGO END,
				PEDIMPDETOrig.PID_INDICED, PEDIMPDETOrig.PID_COS_UNIGEN
			FROM         '+@BDOrigen+'.DBO.KARDESPED KARDESPEDOrig LEFT OUTER JOIN
			                      '+@BDOrigen+'.DBO.PEDIMPDET PEDIMPDETOrig LEFT OUTER JOIN
			                      '+@BDOrigen+'.DBO.PEDIMP PEDIMPOrig ON PEDIMPDETOrig.PI_CODIGO = PEDIMPOrig.PI_CODIGO ON 
			                      KARDESPEDOrig.KAP_INDICED_PED = PEDIMPDETOrig.PID_INDICED RIGHT OUTER JOIN
			                      '+@BDOrigen+'.DBO.FACTEXPDET FACTEXPDETOrig ON KARDESPEDOrig.KAP_INDICED_FACT = FACTEXPDETOrig.FED_INDICED LEFT OUTER JOIN
			                      '+@BDOrigen+'.DBO.MAESTRO MAESTROOrig ON KARDESPEDOrig.MA_HIJO = MAESTROOrig.MA_CODIGO RIGHT OUTER JOIN
			                      '+@BDOrigen+'.DBO.MAESTRO MAESTROOrigG ON PEDIMPDETOrig.MA_GENERICO = MAESTROOrigG.MA_CODIGO RIGHT OUTER JOIN
			                      '+@BDOrigen+'.DBO.FACTEXP FACTEXPOrig ON FACTEXPDETOrig.FE_CODIGO = FACTEXPOrig.FE_CODIGO LEFT OUTER JOIN 
				         '+@BDOrigen+'.DBO.ANEXO24 ANEXO24Orig ON PEDIMPDETOrig.MA_CODIGO = ANEXO24Orig.MA_CODIGO LEFT OUTER JOIN
			                      '+@BDOrigen+'.DBO.AGENCIAPATENTE AGENCIAPATENTEOrig ON PEDIMPOrig.AGT_CODIGO = AGENCIAPATENTEOrig.AGT_CODIGO LEFT OUTER JOIN
				         '+@BDOrigen+'.DBO.CONFIGURACLAVEPED CONFIGURACLAVEPEDOrig ON PEDIMPOrig.CP_CODIGO = CONFIGURACLAVEPEDOrig.CP_CODIGO LEFT OUTER JOIN
			                      MAESTRO  MAESTRO_1 ON MAESTROOrig.MA_NOPARTE =MAESTRO_1.MA_NOPARTE and MAESTROOrig.MA_NOPARTEAUX =MAESTRO_1.MA_NOPARTEAUX 
					AND MAESTROOrig.MA_INV_GEN = MAESTRO_1.MA_INV_GEN LEFT OUTER JOIN
			                      MAESTRO  MAESTRO_2 ON MAESTROOrigG.MA_NOPARTE =MAESTRO_2.MA_NOPARTE and MAESTROOrigG.MA_NOPARTEAUX =MAESTRO_2.MA_NOPARTEAUX 
					AND MAESTROOrigG.MA_INV_GEN = MAESTRO_2.MA_INV_GEN
			WHERE     (FACTEXPOrig.FE_CODIGO = '+@FE_CODIGO+') 
					 AND (KARDESPEDOrig.MA_HIJO IS NOT NULL) AND (PEDIMPOrig.PI_TIPO<>''T'')
			GROUP BY MAESTRO_1.MA_CODIGO, PEDIMPDETOrig.PID_NOPARTE, PEDIMPDETOrig.PID_COS_UNIGEN, 
			                      PEDIMPDETOrig.MA_GENERICO, PEDIMPDETOrig.AR_IMPMX, PEDIMPDETOrig.PID_COS_UNI, PID_COS_UNIADU,
			                      MAESTROOrig.AR_IMPFO, PEDIMPDETOrig.PID_SEC_IMP, PEDIMPDETOrig.PID_DEF_TIP, 
			                      PEDIMPDETOrig.PID_POR_DEF, PEDIMPDETOrig.TI_CODIGO, PEDIMPDETOrig.PA_ORIGEN, PEDIMPDETOrig.SPI_CODIGO, 
			                      PEDIMPDETOrig.ME_CODIGO, PEDIMPOrig.PI_FEC_ENT, MAESTROOrig.MA_NOPARTEAUX, FACTEXPDETOrig.FE_CODIGO, PEDIMPDETOrig.PI_CODIGO,
					AGENCIAPATENTEOrig.AGT_PATENTE+''-''+PEDIMPOrig.PI_FOLIO, PEDIMPOrig.PI_FEC_ENT, PEDIMPOrig.AD_DES, 
					(case WHEN CONFIGURACLAVEPEDOrig.CCP_TIPO=''RE'' THEN PEDIMPOrig.CP_RECTIFICA ELSE PEDIMPOrig.CP_CODIGO END), MAESTRO_2.MA_CODIGO, PEDIMPDETOrig.PID_INDICED
			HAVING      (SUM(KARDESPEDOrig.KAP_CANTDESC) > 0)')

			UPDATE TempPedImpDetF4
			SET PID_VAL_ADU=ROUND(PID_CAN_GEN* PID_COS_UNIADU,0)
			WHERE PID_VAL_ADU IS NULL OR PID_VAL_ADU=0

			

			exec('INSERT INTO PEDIMPDET(PI_CODIGO, PID_INDICED, MA_CODIGO, PID_NOPARTE, PID_NOMBRE, PID_NAME, PID_COS_UNI, PID_COS_UNIADU, PID_COS_UNIGEN, 
			                      PID_COS_UNIVA, PID_COS_UNIMATGRA, PID_CANT, PID_CAN_AR, PID_CAN_GEN, PID_VAL_ADU, PID_CTOT_DLS, 
			                      ME_CODIGO, ME_GENERICO, MA_GENERICO, EQ_GENERICO, EQ_IMPMX, AR_IMPMX, ME_ARIMPMX, AR_EXPFO, 
			                      PID_RATEEXPFO, PID_SEC_IMP, PID_DEF_TIP, PID_POR_DEF, CS_CODIGO, TI_CODIGO, PA_ORIGEN, PA_PROCEDE, 
			                      SPI_CODIGO, PR_CODIGO, PID_IMPRIMIR, PID_DESCARGABLE, PID_NOPARTEAUX, PID_CTOT_MN, PID_PEDF4ORIG, PG_CODIGO, PID_PES_UNIKG,
				         PID_PEDTRANS, PID_FECHAPEDTRANS, AD_TRANS, CP_TRANS, PID_CODIGOFACT)
			
			SELECT PI_CODIGO, PID_INDICED, MA_CODIGO, PID_NOPARTE, max(PID_NOMBRE), max(PID_NAME), PID_COS_UNI, PID_COS_UNIADU, PID_COS_UNIGEN, 
			              PID_COS_UNIVA, PID_COS_UNIMATGRA, sum(PID_CANT), sum(PID_CAN_AR), sum(PID_CAN_GEN), sum(PID_VAL_ADU), sum(PID_CTOT_DLS), 
			              max(ME_CODIGO), max(ME_GENERICO), MA_GENERICO, EQ_GENERICO, EQ_IMPMX, AR_IMPMX, max(ME_ARIMPMX), AR_EXPFO, 
			              PID_RATEEXPFO, PID_SEC_IMP, PID_DEF_TIP, PID_POR_DEF, CS_CODIGO, max(TI_CODIGO), PA_ORIGEN, PA_PROCEDE, 
			             SPI_CODIGO, PR_CODIGO, PID_IMPRIMIR, PID_DESCARGABLE, PID_NOPARTEAUX, SUM(PID_CTOT_MN), PID_PEDF4ORIG, PG_CODIGO, PID_PES_UNIKG,
				PID_PEDTRANS, PID_FECHAPEDTRANS, AD_TRANS, CP_TRANS, PID_CODIGOFACT
			FROM TempPedImpDetF4 
			WHERE PI_CODIGO='+@MAXIMO+' 
			GROUP BY PI_CODIGO, PID_INDICED, MA_CODIGO, PID_NOPARTE, PID_COS_UNI, PID_COS_UNIADU, PID_COS_UNIGEN, 
		              PID_COS_UNIVA, PID_COS_UNIMATGRA, PID_PEDTRANS, PID_FECHAPEDTRANS, AD_TRANS, CP_TRANS,
		              MA_GENERICO, EQ_GENERICO, EQ_IMPMX, AR_IMPMX, AR_EXPFO, PID_CODIGOFACT,
		              PID_RATEEXPFO, PID_SEC_IMP, PID_DEF_TIP, PID_POR_DEF, CS_CODIGO, PA_ORIGEN, PA_PROCEDE, 
		               SPI_CODIGO, PR_CODIGO, PID_IMPRIMIR, PID_DESCARGABLE, PID_NOPARTEAUX, PID_PEDF4ORIG, PG_CODIGO, PID_PES_UNIKG')


			insert into PIDescarga(PI_CODIGO, PID_INDICED, PID_SALDOGEN, MA_CODIGO, MA_GENERICO, PI_FEC_ENT, PI_ACTIVOFIJO, PI_DEFINITIVO, DI_DEST_ORIGEN)
			SELECT TempPedImpDetF4.PI_CODIGO, TempPedImpDetF4.PID_INDICED, TempPedImpDetF4.PID_CAN_GEN, TempPedImpDetF4.MA_CODIGO, TempPedImpDetF4.MA_GENERICO, 
			TempPedImpDetF4.PID_FECHAPEDTRANS, 'PI_ACTIVOFIJO'=CASE WHEN TempPedImpDetF4.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO IN('H', 'Q', 'X', 'C')) THEN 'S' ELSE 'N' END,
			'N', PEDIMP.DI_DEST_ORIGEN
			FROM PEDIMP LEFT OUTER JOIN
			                      TempPedImpDetF4 ON PEDIMP.PI_CODIGO = TempPedImpDetF4.PI_CODIGO 
			WHERE TempPedImpDetF4.PID_INDICED not in (select PID_INDICED from PIDescarga)		
			and  TempPedImpDetF4.PI_CODIGO=@MAXIMO
			ORDER BY TempPedImpDetF4.PID_INDICED

			
		
			update consecutivo
			set cv_codigo =  isnull((select max(PID_INDICED) from PEDIMPDET),0) + 1
			where cv_tipo = 'PID'
		
			truncate TABLE TempPedImpDetF4



			exec SP_actualizapedimpvencimiento @MAXIMO


	end
GO
