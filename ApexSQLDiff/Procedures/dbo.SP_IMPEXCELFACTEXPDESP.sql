SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO



CREATE PROCEDURE [dbo].[SP_IMPEXCELFACTEXPDESP] @Codigo int   as

SET NOCOUNT ON 
DECLARE @FEI_CODIGO INT, @PESO decimal(38,6), @COSTO decimal(38,6), @consecutivo INT


DELETE FROM IMPORTLOG WHERE IML_CBFORMA=20

if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS

delete from IMPEXCELFACTEXP where NOPARTE=''

if exists (SELECT NOPARTE FROM  dbo.IMPEXCELFACTEXP GROUP BY NOPARTE HAVING (COUNT(CANTIDAD) > 1))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
SELECT 'NO SE PUEDE IMPORTAR EL ARCHIVO PORQUE: '+NOPARTE +' ESTA REPETIDO', 20
FROM  dbo.IMPEXCELFACTEXP GROUP BY NOPARTE HAVING (COUNT(CANTIDAD) > 1)
else
begin

	if exists(SELECT dbo.IMPEXCELFACTEXP.NOPARTE
		FROM         dbo.MAESTRO RIGHT OUTER JOIN
		                      dbo.IMPEXCELFACTEXP ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELFACTEXP.NOPARTE
		WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL))
	
		INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
		SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELFACTEXP.NOPARTE +' POR QUE NO EXISTE EN EL CAT. MAESTRO' , 20
		FROM         dbo.MAESTRO RIGHT OUTER JOIN
		                      dbo.IMPEXCELFACTEXP ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELFACTEXP.NOPARTE
		WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL) 
	

	
		if exists(SELECT     dbo.MAESTRO.MA_NOPARTE
		FROM         dbo.MAESTRO
		GROUP BY MA_NOPARTE
		HAVING      (COUNT(MA_CODIGO) > 1) AND (MA_NOPARTE IN
		                          (SELECT NOPARTE FROM IMPEXCELFACTEXP)))

		INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 	
		SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' + MA_NOPARTE + ' PORQUE ESTA REPETIDO EN EL CAT. MAESTRO', 20
		FROM         dbo.MAESTRO
		GROUP BY MA_NOPARTE
		HAVING      (COUNT(MA_CODIGO) > 1) AND (MA_NOPARTE IN
		                          (SELECT NOPARTE FROM IMPEXCELFACTEXP))
		
	
	SELECT @PESO=MAX(FEI_TOTALPESO), @COSTO=MAX(FEI_TOTALCOSTO) FROM dbo.FACTEXPDESP
	WHERE FE_CODIGO=@Codigo

	select @consecutivo=cv_codigo from consecutivo
	where cv_tipo = 'FEI'

	
	INSERT INTO dbo.FACTEXPDESP( FEI_CODIGO, FE_CODIGO, MA_CODIGO, FEI_PORCENTAJE, FEI_TOTALPESO, FEI_TOTALCOSTO)
	SELECT     TOP 100 PERCENT dbo.IMPEXCELFACTEXP.ORDEN+@consecutivo, @Codigo, max(dbo.MAESTRO.MA_CODIGO), round(max(dbo.IMPEXCELFACTEXP.CANTIDAD),2), isnull(@PESO,0), isnull(@COSTO,0)
	FROM         dbo.IMPEXCELFACTEXP INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELFACTEXP.NOPARTE = dbo.MAESTRO.MA_NOPARTE
	WHERE dbo.MAESTRO.MA_CODIGO NOT IN (SELECT MA_CODIGO FROM dbo.FACTEXPDESP WHERE FE_CODIGO=@Codigo)  AND 

			dbo.IMPEXCELFACTEXP.NOPARTE NOT IN (SELECT     dbo.MAESTRO.MA_NOPARTE
						FROM         dbo.MAESTRO
						GROUP BY MA_NOPARTE
						HAVING      (COUNT(MA_CODIGO) > 1) AND (MA_NOPARTE IN
						                          (SELECT NOPARTE FROM IMPEXCELFACTEXP)))
	GROUP BY dbo.IMPEXCELFACTEXP.ORDEN
	ORDER BY dbo.IMPEXCELFACTEXP.ORDEN
	





	
	select @FEI_CODIGO= max(FEI_codigo) from FACTEXPDESP
	
		update consecutivo
		set cv_codigo =  isnull(@FEI_CODIGO,0) + 1
		where cv_tipo = 'FEI'
end



























GO
