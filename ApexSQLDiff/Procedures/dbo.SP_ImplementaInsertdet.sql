SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_ImplementaInsertdet]     as

SET NOCOUNT ON 
DECLARE @PI_CODIGO int, @PID_CANT decimal(38,6),  @PID_NOPARTE varchar(30), 
		@PID_NOMBRE varchar(150), @PID_NAME varchar(150), @PID_COS_UNI decimal(38,6), @PID_CTOT_DLS decimal(38,6), 
		@PID_VAL_ADU decimal(38,6), @PA_ORIGEN int, @PA_PROCEDE int, 
		@PID_COS_UNIGEN decimal(38,6), @ME_CODIGO int, 
		@ME_GENERICO int, @ME_AR int, @MA_GENERICO int, @AR_EXPFO int, @AR_IMPMX int, @PID_RATEEXPFO decimal(38,6), 
		@PID_SEC_IMP int, @PID_DEF_TIP char(1), @PID_POR_DEF decimal(38,6),
		@PID_SALDOGEN decimal(38,6), @TI_CODIGO smallint, @CONSECUTIVO int, @PID_INDICED int,
		@MA_CODIGO int, @PI_FEC_ENT DATETIME


DECLARE cur_pedimpinsertdet CURSOR FOR


SELECT     dbo.PEDIMP.PI_CODIGO, SUM(dbo.IMPLEMENTAREL.PID_CANT_ST) AS PID_CANT_ST, dbo.MAESTRO.MA_NOPARTE, dbo.MAESTRO.MA_NOMBRE, 
                      dbo.MAESTRO.MA_NAME, dbo.IMPLEMENTA.MA_COSTO * dbo.IMPLEMENTA.FACTCONV AS MA_COSTO, 
                      dbo.IMPLEMENTAREL.PID_CANT_ST * VMAESTROCOST.MA_COSTO AS PID_CTOT_DLS, 
                      SUM(dbo.IMPLEMENTAREL.PID_CANT_ST * VMAESTROCOST.MA_COSTO) AS PID_VAL_ADU, dbo.MAESTRO.PA_ORIGEN, dbo.MAESTRO.PA_PROCEDE, 
                      dbo.IMPLEMENTA.MA_COSTO * dbo.IMPLEMENTA.FACTCONV AS PID_COS_UNIGEN, 
                      dbo.IMPLEMENTA.ME_CODIGO, dbo.IMPLEMENTA.ME_CODIGO AS ME_GENERICO, dbo.IMPLEMENTA.ME_CODIGO AS ME_AR, 
                      dbo.MAESTRO.MA_GENERICO, dbo.MAESTRO.AR_EXPFO, dbo.MAESTRO.AR_IMPMX, dbo.GetAdvalorem(dbo.MAESTRO.AR_EXPFO, 0, 'G', 0, 0), dbo.MAESTRO.MA_SEC_IMP, 
                      dbo.MAESTRO.MA_DEF_TIP, dbo.GetAdvalorem(dbo.MAESTRO.AR_IMPMX, dbo.MAESTRO.PA_ORIGEN, isnull(dbo.MAESTRO.MA_DEF_TIP,'G'), isnull(dbo.MAESTRO.MA_SEC_IMP,0), isnull(dbo.MAESTRO.SPI_CODIGO,0)), SUM(dbo.IMPLEMENTAREL.PID_CANT_ST) 
                      AS PID_SALDOGEN, dbo.MAESTRO.TI_CODIGO, dbo.IMPLEMENTAREL.BST_HIJO
FROM         dbo.MAESTRO RIGHT OUTER JOIN
                      dbo.IMPLEMENTAREL LEFT OUTER JOIN
                      dbo.IMPLEMENTA ON dbo.IMPLEMENTAREL.BST_HIJO = dbo.IMPLEMENTA.BST_HIJO RIGHT OUTER JOIN
                      dbo.IMPLEMENTAPEDIMP ON dbo.IMPLEMENTAREL.PI_CODIGOIMP = dbo.IMPLEMENTAPEDIMP.PI_CODIGOIMP ON 
                      dbo.MAESTRO.MA_CODIGO = dbo.IMPLEMENTAREL.BST_HIJO RIGHT OUTER JOIN 
                      dbo.PEDIMP ON dbo.IMPLEMENTAPEDIMP.PI_FOLIO = dbo.PEDIMP.PI_FOLIO LEFT OUTER JOIN VMAESTROCOST ON
	         dbo.MAESTRO.MA_CODIGO = VMAESTROCOST.MA_CODIGO
 WHERE dbo.MAESTRO.MA_CODIGO IS NOT NULL
GROUP BY dbo.PEDIMP.PI_CODIGO, dbo.IMPLEMENTA.FACTCONV, dbo.MAESTRO.MA_NOPARTE, dbo.MAESTRO.MA_NOMBRE, dbo.MAESTRO.MA_NAME, 
                      dbo.IMPLEMENTA.MA_COSTO, dbo.MAESTRO.PA_ORIGEN, dbo.MAESTRO.PA_PROCEDE, VMAESTROCOST.MA_COSTO, 
                      dbo.IMPLEMENTA.ME_CODIGO, dbo.MAESTRO.TI_CODIGO, dbo.MAESTRO.MA_DEF_TIP, 
                      dbo.MAESTRO.AR_IMPMX, dbo.MAESTRO.AR_EXPFO, dbo.MAESTRO.MA_GENERICO, dbo.MAESTRO.MA_SEC_IMP, 
                      dbo.IMPLEMENTA.MA_COSTO * dbo.IMPLEMENTA.FACTCONV, dbo.IMPLEMENTAREL.PID_CANT_ST * VMAESTROCOST.MA_COSTO, 
	        dbo.IMPLEMENTAREL.BST_HIJO, dbo.MAESTRO.SPI_CODIGO
HAVING      (SUM(dbo.IMPLEMENTAREL.PID_CANT_ST) > 0) AND (SUM(dbo.IMPLEMENTAREL.PID_CANT_ST) IS NOT NULL)
OPEN cur_pedimpinsertdet
		
FETCH NEXT FROM cur_pedimpinsertdet INTO @PI_CODIGO, @PID_CANT, @PID_NOPARTE, 
		@PID_NOMBRE, @PID_NAME, @PID_COS_UNI, @PID_COS_UNIGEN, 
		@PID_CTOT_DLS, @PID_VAL_ADU, @PA_ORIGEN, @PA_PROCEDE,
		@ME_CODIGO, 
		@ME_GENERICO, @ME_AR, @MA_GENERICO, @AR_EXPFO, @AR_IMPMX, @PID_RATEEXPFO, 
		@PID_SEC_IMP, @PID_DEF_TIP, @PID_POR_DEF,
		@PID_SALDOGEN, @TI_CODIGO, @MA_CODIGO

WHILE (@@FETCH_STATUS = 0) 
BEGIN


SELECT @CONSECUTIVO=ISNULL(MAX(PID_INDICED),0) FROM PEDIMPDET
SET @CONSECUTIVO=@CONSECUTIVO+1


	SELECT @PI_FEC_ENT=PI_FEC_ENT FROM PEDIMP WHERE PI_CODIGO=@PI_CODIGO

	INSERT INTO PEDIMPDET (PI_CODIGO, PID_CANT, PID_CAN_GEN, EQ_GENERICO, EQ_IMPMX, PID_NOPARTE, 
		PID_NOMBRE, PID_NAME, PID_COS_UNI, PID_COS_UNIGEN, 
		PID_CTOT_DLS, PID_VAL_ADU, PA_ORIGEN, PA_PROCEDE,
		ME_CODIGO, 
		ME_GENERICO, ME_ARIMPMX, MA_GENERICO, AR_EXPFO, AR_IMPMX, PID_RATEEXPFO, 
		PID_SEC_IMP, PID_DEF_TIP, PID_POR_DEF, 		TI_CODIGO, PID_IMPRIMIR, MA_CODIGO, PID_INDICED)


	VALUES ( @PI_CODIGO, @PID_CANT, @PID_CANT, 1, 1, @PID_NOPARTE, 
		@PID_NOMBRE, @PID_NAME, isnull(@PID_COS_UNI,0), isnull(@PID_COS_UNIGEN,0), 
		isnull(@PID_CTOT_DLS,0), isnull(@PID_VAL_ADU,0), @PA_ORIGEN, @PA_PROCEDE, 
		@ME_CODIGO, 
		@ME_GENERICO, @ME_AR, @MA_GENERICO, @AR_EXPFO, @AR_IMPMX, @PID_RATEEXPFO, 
		@PID_SEC_IMP, isnull(@PID_DEF_TIP,'G'), isnull(@PID_POR_DEF,-1), 
		@TI_CODIGO, 'S', @MA_CODIGO, @CONSECUTIVO)

	INSERT INTO PIDESCARGA (PI_CODIGO, PID_INDICED, MA_CODIGO, MA_GENERICO, PID_SALDOGEN, PI_FEC_ENT, PI_DEFINITIVO)
	VALUES ( @PI_CODIGO, @CONSECUTIVO, @MA_CODIGO, @MA_GENERICO, @PID_SALDOGEN, @PI_FEC_ENT, 'N')



	FETCH NEXT FROM cur_pedimpinsertdet INTO  @PI_CODIGO, @PID_CANT, @PID_NOPARTE, 
		@PID_NOMBRE, @PID_NAME, @PID_COS_UNI, @PID_COS_UNIGEN, 
		@PID_CTOT_DLS, @PID_VAL_ADU, @PA_ORIGEN, @PA_PROCEDE,
		@ME_CODIGO, 
		@ME_GENERICO, @ME_AR, @MA_GENERICO, @AR_EXPFO, @AR_IMPMX, @PID_RATEEXPFO, 
		@PID_SEC_IMP, @PID_DEF_TIP, @PID_POR_DEF, 
		@PID_SALDOGEN, @TI_CODIGO, @MA_CODIGO
END


CLOSE cur_pedimpinsertdet
DEALLOCATE cur_pedimpinsertdet



select @pid_indiced= max(pid_indiced) from pedimpdet

	update consecutivo
	set cv_codigo =  isnull(@pid_indiced,0) + 1
	where cv_tipo = 'PID'


GO
