SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO


CREATE PROCEDURE [dbo].[SP_IMPEXCELORDTRABAJO] @Codigo int, @cl_codigo int   as

SET NOCOUNT ON 
DECLARE @CONSECUTIVO INTEGER, @NOPARTE varchar(30), @COSTO decimal(38,6), @CANTIDAD decimal(38,6), @PESO decimal(38,6), @ORIGEN INT,
@Otd_indiced INT
-- se actualiza el costo en caso de que venga nulo o igual a cero
UPDATE dbo.IMPEXCELPROD
SET     dbo.IMPEXCELPROD.COSTO= isnull(dbo.VMAESTROCOST.MA_GRAV_MP,0)+ isnull(dbo.VMAESTROCOST.MA_GRAV_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_GRAV_EMP,0)+ isnull(dbo.VMAESTROCOST.MA_NG_MP,0) +isnull(dbo.VMAESTROCOST.MA_NG_ADD,0)+ 
isnull(dbo.VMAESTROCOST.MA_NG_EMP,0)
FROM         dbo.IMPEXCELPROD INNER JOIN
                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
                      dbo.VMAESTROCOST ON dbo.MAESTRO.MA_CODIGO = dbo.VMAESTROCOST.MA_CODIGO
WHERE (dbo.IMPEXCELPROD.COSTO=0 OR dbo.IMPEXCELPROD.COSTO IS NULL)
AND dbo.VMAESTROCOST.SPI_CODIGO=22 
-- se actualiza el precio en caso de que venga nulo o igual a cero
IF (SELECT CF_PRECIOCLIENTE FROM CONFIGURACION)='N' 
BEGIN
	UPDATE dbo.IMPEXCELPROD
	SET     dbo.IMPEXCELPROD.PRECIO= ISNULL(dbo.MAESTROCLIENTE.MC_PRECIO, 0)
	FROM         dbo.IMPEXCELPROD INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
	                      dbo.MAESTROCLIENTE ON dbo.MAESTRO.MA_CODIGO = dbo.MAESTROCLIENTE.MA_CODIGO
	WHERE (dbo.IMPEXCELPROD.PRECIO=0 OR dbo.IMPEXCELPROD.PRECIO IS NULL)
END
ELSE
BEGIN
	UPDATE dbo.IMPEXCELPROD
	SET     dbo.IMPEXCELPROD.PRECIO= ISNULL(dbo.MAESTROCLIENTE.MC_PRECIO, 0)
	FROM         dbo.IMPEXCELPROD INNER JOIN
	                      dbo.MAESTRO ON dbo.IMPEXCELPROD.NOPARTE = dbo.MAESTRO.MA_NOPARTE LEFT OUTER JOIN
	                      dbo.MAESTROCLIENTE ON dbo.MAESTRO.MA_CODIGO = dbo.MAESTROCLIENTE.MA_CODIGO
	WHERE (dbo.IMPEXCELPROD.PRECIO=0 OR dbo.IMPEXCELPROD.PRECIO IS NULL)
	AND dbo.MAESTROCLIENTE.CL_CODIGO = @cl_codigo
END
--borra los registros de la tabla que se hayan importado sin numero de parte
delete from IMPEXCELPROD where NOPARTE=''
DELETE FROM IMPORTLOG WHERE IML_CBFORMA=110
if (select count(*) from IMPORTLOG)=0
DBCC CHECKIDENT (IMPORTLOG, RESEED, 0) WITH NO_INFOMSGS
-- revisa si existen en el catalogo maestro
if exists(SELECT dbo.IMPEXCELPROD.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELPROD.NOPARTE +' POR QUE NO EXISTE EN EL CAT. MAESTRO', 110
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     (dbo.MAESTRO.MA_NOPARTE IS NULL) 
-- revisa si es producto terminado o subensamble
if exists(SELECT dbo.IMPEXCELPROD.NOPARTE
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     dbo.MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S'))
	INSERT INTO IMPORTLOG (IML_MENSAJE, IML_CBFORMA) 
	SELECT     'NO SE PUEDE IMPORTAR NO. PARTE : ' +dbo.IMPEXCELPROD.NOPARTE +' POR QUE ES DIFERENTE DE PRODUCTO TERMINADO Y SUBENSAMBLE', 110
	FROM         dbo.MAESTRO RIGHT OUTER JOIN
	                      dbo.IMPEXCELPROD ON dbo.MAESTRO.MA_NOPARTE = dbo.IMPEXCELPROD.NOPARTE
	WHERE     dbo.MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO<>'P' AND CFT_TIPO<>'S')

-- insercion a la tabla ORDTRABAJODET
	select @consecutivo=cv_codigo from consecutivo
	where cv_tipo = 'OTD'
INSERT INTO ORDTRABAJODET     (OT_CODIGO, OTD_INDICED, MA_CODIGO, OTD_NOPARTE, OTD_NOMBRE, OTD_SIZELOTE, ME_CODIGO, OTD_SALDO, OTD_PRECIOVENTA, 
                      OTD_PRECIOCOMPRA, OTD_SALDOSURT)
SELECT     @Codigo, IMPEXCELPROD.ORDEN+@consecutivo, MAESTRO.MA_CODIGO, IMPEXCELPROD.NOPARTE, MAESTRO.MA_NOMBRE, IMPEXCELPROD.CANTIDAD, 
                      MAESTRO.ME_COM, IMPEXCELPROD.CANTIDAD, IMPEXCELPROD.PRECIO, IMPEXCELPROD.COSTO, IMPEXCELPROD.CANTIDAD
FROM         IMPEXCELPROD LEFT OUTER JOIN
                      MAESTRO ON IMPEXCELPROD.NOPARTE = MAESTRO.MA_NOPARTE
WHERE     (MAESTRO.MA_INV_GEN = 'I') AND MAESTRO.TI_CODIGO IN (SELECT TI_CODIGO FROM CONFIGURATIPO WHERE CFT_TIPO='P' OR CFT_TIPO='S')
ORDER BY IMPEXCELPROD.ORDEN
select @Otd_indiced= max(otd_indiced) from ordtrabajodet
	update consecutivo
	set cv_codigo =  isnull(@otd_indiced,0) + 1
	where cv_tipo = 'ORD'

GO
